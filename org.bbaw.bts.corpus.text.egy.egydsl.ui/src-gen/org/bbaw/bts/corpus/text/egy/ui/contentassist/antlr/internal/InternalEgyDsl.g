/*
* generated by Xtext
*/
grammar InternalEgyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.bbaw.bts.corpus.text.egy.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.bbaw.bts.corpus.text.egy.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.bbaw.bts.corpus.text.egy.services.EgyDslGrammarAccess;

}

@parser::members {
 
 	private EgyDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EgyDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleTextContent
entryRuleTextContent 
:
{ before(grammarAccess.getTextContentRule()); }
	 ruleTextContent
{ after(grammarAccess.getTextContentRule()); } 
	 EOF 
;

// Rule TextContent
ruleTextContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextContentAccess().getGroup()); }
(rule__TextContent__Group__0)
{ after(grammarAccess.getTextContentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextItem
entryRuleTextItem 
:
{ before(grammarAccess.getTextItemRule()); }
	 ruleTextItem
{ after(grammarAccess.getTextItemRule()); } 
	 EOF 
;

// Rule TextItem
ruleTextItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextItemAccess().getSentenceParserRuleCall()); }
	ruleSentence
{ after(grammarAccess.getTextItemAccess().getSentenceParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSentence
entryRuleSentence 
:
{ before(grammarAccess.getSentenceRule()); }
	 ruleSentence
{ after(grammarAccess.getSentenceRule()); } 
	 EOF 
;

// Rule Sentence
ruleSentence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSentenceAccess().getGroup()); }
(rule__Sentence__Group__0)
{ after(grammarAccess.getSentenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSentenceItem
entryRuleSentenceItem 
:
{ before(grammarAccess.getSentenceItemRule()); }
	 ruleSentenceItem
{ after(grammarAccess.getSentenceItemRule()); } 
	 EOF 
;

// Rule SentenceItem
ruleSentenceItem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSentenceItemAccess().getAlternatives()); }
(rule__SentenceItem__Alternatives)
{ after(grammarAccess.getSentenceItemAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractMarker
entryRuleAbstractMarker 
:
{ before(grammarAccess.getAbstractMarkerRule()); }
	 ruleAbstractMarker
{ after(grammarAccess.getAbstractMarkerRule()); } 
	 EOF 
;

// Rule AbstractMarker
ruleAbstractMarker
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractMarkerAccess().getAlternatives()); }
(rule__AbstractMarker__Alternatives)
{ after(grammarAccess.getAbstractMarkerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAmbivalence
entryRuleAmbivalence 
:
{ before(grammarAccess.getAmbivalenceRule()); }
	 ruleAmbivalence
{ after(grammarAccess.getAmbivalenceRule()); } 
	 EOF 
;

// Rule Ambivalence
ruleAmbivalence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAmbivalenceAccess().getGroup()); }
(rule__Ambivalence__Group__0)
{ after(grammarAccess.getAmbivalenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCase
entryRuleCase 
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseAccess().getGroup()); }
(rule__Case__Group__0)
{ after(grammarAccess.getCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSentenceItemNoAmbivalence
entryRuleSentenceItemNoAmbivalence 
:
{ before(grammarAccess.getSentenceItemNoAmbivalenceRule()); }
	 ruleSentenceItemNoAmbivalence
{ after(grammarAccess.getSentenceItemNoAmbivalenceRule()); } 
	 EOF 
;

// Rule SentenceItemNoAmbivalence
ruleSentenceItemNoAmbivalence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSentenceItemNoAmbivalenceAccess().getAlternatives()); }
(rule__SentenceItemNoAmbivalence__Alternatives)
{ after(grammarAccess.getSentenceItemNoAmbivalenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersMarker
entryRuleVersMarker 
:
{ before(grammarAccess.getVersMarkerRule()); }
	 ruleVersMarker
{ after(grammarAccess.getVersMarkerRule()); } 
	 EOF 
;

// Rule VersMarker
ruleVersMarker
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVersMarkerAccess().getAlternatives()); }
(rule__VersMarker__Alternatives)
{ after(grammarAccess.getVersMarkerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersFrontierMarker
entryRuleVersFrontierMarker 
:
{ before(grammarAccess.getVersFrontierMarkerRule()); }
	 ruleVersFrontierMarker
{ after(grammarAccess.getVersFrontierMarkerRule()); } 
	 EOF 
;

// Rule VersFrontierMarker
ruleVersFrontierMarker
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVersFrontierMarkerAccess().getGroup()); }
(rule__VersFrontierMarker__Group__0)
{ after(grammarAccess.getVersFrontierMarkerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVersbreakMarker
entryRuleVersbreakMarker 
:
{ before(grammarAccess.getVersbreakMarkerRule()); }
	 ruleVersbreakMarker
{ after(grammarAccess.getVersbreakMarkerRule()); } 
	 EOF 
;

// Rule VersbreakMarker
ruleVersbreakMarker
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVersbreakMarkerAccess().getGroup()); }
(rule__VersbreakMarker__Group__0)
{ after(grammarAccess.getVersbreakMarkerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBrokenVersbreakMarker
entryRuleBrokenVersbreakMarker 
:
{ before(grammarAccess.getBrokenVersbreakMarkerRule()); }
	 ruleBrokenVersbreakMarker
{ after(grammarAccess.getBrokenVersbreakMarkerRule()); } 
	 EOF 
;

// Rule BrokenVersbreakMarker
ruleBrokenVersbreakMarker
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBrokenVersbreakMarkerAccess().getGroup()); }
(rule__BrokenVersbreakMarker__Group__0)
{ after(grammarAccess.getBrokenVersbreakMarkerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMarker
entryRuleMarker 
:
{ before(grammarAccess.getMarkerRule()); }
	 ruleMarker
{ after(grammarAccess.getMarkerRule()); } 
	 EOF 
;

// Rule Marker
ruleMarker
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMarkerAccess().getTypeAssignment()); }
(rule__Marker__TypeAssignment)
{ after(grammarAccess.getMarkerAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWord
entryRuleWord 
:
{ before(grammarAccess.getWordRule()); }
	 ruleWord
{ after(grammarAccess.getWordRule()); } 
	 EOF 
;

// Rule Word
ruleWord
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWordAccess().getGroup()); }
(rule__Word__Group__0)
{ after(grammarAccess.getWordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWordPart
entryRuleWordPart 
:
{ before(grammarAccess.getWordPartRule()); }
	 ruleWordPart
{ after(grammarAccess.getWordPartRule()); } 
	 EOF 
;

// Rule WordPart
ruleWordPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWordPartAccess().getGroup()); }
(rule__WordPart__Group__0)
{ after(grammarAccess.getWordPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWordEnding
entryRuleWordEnding 
:
{ before(grammarAccess.getWordEndingRule()); }
	 ruleWordEnding
{ after(grammarAccess.getWordEndingRule()); } 
	 EOF 
;

// Rule WordEnding
ruleWordEnding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWordEndingAccess().getAlternatives()); }
(rule__WordEnding__Alternatives)
{ after(grammarAccess.getWordEndingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnding
entryRuleEnding 
:
{ before(grammarAccess.getEndingRule()); }
	 ruleEnding
{ after(grammarAccess.getEndingRule()); } 
	 EOF 
;

// Rule Ending
ruleEnding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEndingAccess().getCharsAssignment()); }
(rule__Ending__CharsAssignment)
{ after(grammarAccess.getEndingAccess().getCharsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDualEnding
entryRuleDualEnding 
:
{ before(grammarAccess.getDualEndingRule()); }
	 ruleDualEnding
{ after(grammarAccess.getDualEndingRule()); } 
	 EOF 
;

// Rule DualEnding
ruleDualEnding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDualEndingAccess().getCharsAssignment()); }
(rule__DualEnding__CharsAssignment)
{ after(grammarAccess.getDualEndingAccess().getCharsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePluralEnding
entryRulePluralEnding 
:
{ before(grammarAccess.getPluralEndingRule()); }
	 rulePluralEnding
{ after(grammarAccess.getPluralEndingRule()); } 
	 EOF 
;

// Rule PluralEnding
rulePluralEnding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPluralEndingAccess().getCharsAssignment()); }
(rule__PluralEnding__CharsAssignment)
{ after(grammarAccess.getPluralEndingAccess().getCharsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleWordMiddle
entryRuleWordMiddle 
:
{ before(grammarAccess.getWordMiddleRule()); }
	 ruleWordMiddle
{ after(grammarAccess.getWordMiddleRule()); } 
	 EOF 
;

// Rule WordMiddle
ruleWordMiddle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWordMiddleAccess().getAlternatives()); }
(rule__WordMiddle__Alternatives)
{ after(grammarAccess.getWordMiddleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChars
entryRuleChars 
:
{ before(grammarAccess.getCharsRule()); }
	 ruleChars
{ after(grammarAccess.getCharsRule()); } 
	 EOF 
;

// Rule Chars
ruleChars
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharsAccess().getNameAssignment()); }
(rule__Chars__NameAssignment)
{ after(grammarAccess.getCharsAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuffixChars
entryRuleSuffixChars 
:
{ before(grammarAccess.getSuffixCharsRule()); }
	 ruleSuffixChars
{ after(grammarAccess.getSuffixCharsRule()); } 
	 EOF 
;

// Rule SuffixChars
ruleSuffixChars
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuffixCharsAccess().getNameAssignment()); }
(rule__SuffixChars__NameAssignment)
{ after(grammarAccess.getSuffixCharsAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfix
entryRuleInterfix 
:
{ before(grammarAccess.getInterfixRule()); }
	 ruleInterfix
{ after(grammarAccess.getInterfixRule()); } 
	 EOF 
;

// Rule Interfix
ruleInterfix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfixAccess().getAlternatives()); }
(rule__Interfix__Alternatives)
{ after(grammarAccess.getInterfixAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfixLexical
entryRuleInterfixLexical 
:
{ before(grammarAccess.getInterfixLexicalRule()); }
	 ruleInterfixLexical
{ after(grammarAccess.getInterfixLexicalRule()); } 
	 EOF 
;

// Rule InterfixLexical
ruleInterfixLexical
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfixLexicalAccess().getGroup()); }
(rule__InterfixLexical__Group__0)
{ after(grammarAccess.getInterfixLexicalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfixFlexion
entryRuleInterfixFlexion 
:
{ before(grammarAccess.getInterfixFlexionRule()); }
	 ruleInterfixFlexion
{ after(grammarAccess.getInterfixFlexionRule()); } 
	 EOF 
;

// Rule InterfixFlexion
ruleInterfixFlexion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfixFlexionAccess().getGroup()); }
(rule__InterfixFlexion__Group__0)
{ after(grammarAccess.getInterfixFlexionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfixSuffixPronomLexical
entryRuleInterfixSuffixPronomLexical 
:
{ before(grammarAccess.getInterfixSuffixPronomLexicalRule()); }
	 ruleInterfixSuffixPronomLexical
{ after(grammarAccess.getInterfixSuffixPronomLexicalRule()); } 
	 EOF 
;

// Rule InterfixSuffixPronomLexical
ruleInterfixSuffixPronomLexical
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfixSuffixPronomLexicalAccess().getGroup()); }
(rule__InterfixSuffixPronomLexical__Group__0)
{ after(grammarAccess.getInterfixSuffixPronomLexicalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfixPrefixNonLexical
entryRuleInterfixPrefixNonLexical 
:
{ before(grammarAccess.getInterfixPrefixNonLexicalRule()); }
	 ruleInterfixPrefixNonLexical
{ after(grammarAccess.getInterfixPrefixNonLexicalRule()); } 
	 EOF 
;

// Rule InterfixPrefixNonLexical
ruleInterfixPrefixNonLexical
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfixPrefixNonLexicalAccess().getGroup()); }
(rule__InterfixPrefixNonLexical__Group__0)
{ after(grammarAccess.getInterfixPrefixNonLexicalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfixPrefixLexical
entryRuleInterfixPrefixLexical 
:
{ before(grammarAccess.getInterfixPrefixLexicalRule()); }
	 ruleInterfixPrefixLexical
{ after(grammarAccess.getInterfixPrefixLexicalRule()); } 
	 EOF 
;

// Rule InterfixPrefixLexical
ruleInterfixPrefixLexical
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfixPrefixLexicalAccess().getGroup()); }
(rule__InterfixPrefixLexical__Group__0)
{ after(grammarAccess.getInterfixPrefixLexicalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfixConnectionSyllabicGroup
entryRuleInterfixConnectionSyllabicGroup 
:
{ before(grammarAccess.getInterfixConnectionSyllabicGroupRule()); }
	 ruleInterfixConnectionSyllabicGroup
{ after(grammarAccess.getInterfixConnectionSyllabicGroupRule()); } 
	 EOF 
;

// Rule InterfixConnectionSyllabicGroup
ruleInterfixConnectionSyllabicGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfixConnectionSyllabicGroupAccess().getGroup()); }
(rule__InterfixConnectionSyllabicGroup__Group__0)
{ after(grammarAccess.getInterfixConnectionSyllabicGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBrackets
entryRuleBrackets 
:
{ before(grammarAccess.getBracketsRule()); }
	 ruleBrackets
{ after(grammarAccess.getBracketsRule()); } 
	 EOF 
;

// Rule Brackets
ruleBrackets
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBracketsAccess().getAlternatives()); }
(rule__Brackets__Alternatives)
{ after(grammarAccess.getBracketsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpanded
entryRuleExpanded 
:
{ before(grammarAccess.getExpandedRule()); }
	 ruleExpanded
{ after(grammarAccess.getExpandedRule()); } 
	 EOF 
;

// Rule Expanded
ruleExpanded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpandedAccess().getGroup()); }
(rule__Expanded__Group__0)
{ after(grammarAccess.getExpandedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoExpanded
entryRuleNoExpanded 
:
{ before(grammarAccess.getNoExpandedRule()); }
	 ruleNoExpanded
{ after(grammarAccess.getNoExpandedRule()); } 
	 EOF 
;

// Rule NoExpanded
ruleNoExpanded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoExpandedAccess().getAlternatives()); }
(rule__NoExpanded__Alternatives)
{ after(grammarAccess.getNoExpandedAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmendation
entryRuleEmendation 
:
{ before(grammarAccess.getEmendationRule()); }
	 ruleEmendation
{ after(grammarAccess.getEmendationRule()); } 
	 EOF 
;

// Rule Emendation
ruleEmendation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmendationAccess().getGroup()); }
(rule__Emendation__Group__0)
{ after(grammarAccess.getEmendationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoEmendation
entryRuleNoEmendation 
:
{ before(grammarAccess.getNoEmendationRule()); }
	 ruleNoEmendation
{ after(grammarAccess.getNoEmendationRule()); } 
	 EOF 
;

// Rule NoEmendation
ruleNoEmendation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoEmendationAccess().getAlternatives()); }
(rule__NoEmendation__Alternatives)
{ after(grammarAccess.getNoEmendationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDisputableReading
entryRuleDisputableReading 
:
{ before(grammarAccess.getDisputableReadingRule()); }
	 ruleDisputableReading
{ after(grammarAccess.getDisputableReadingRule()); } 
	 EOF 
;

// Rule DisputableReading
ruleDisputableReading
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDisputableReadingAccess().getGroup()); }
(rule__DisputableReading__Group__0)
{ after(grammarAccess.getDisputableReadingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoDisputableReading
entryRuleNoDisputableReading 
:
{ before(grammarAccess.getNoDisputableReadingRule()); }
	 ruleNoDisputableReading
{ after(grammarAccess.getNoDisputableReadingRule()); } 
	 EOF 
;

// Rule NoDisputableReading
ruleNoDisputableReading
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoDisputableReadingAccess().getAlternatives()); }
(rule__NoDisputableReading__Alternatives)
{ after(grammarAccess.getNoDisputableReadingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLacuna
entryRuleLacuna 
:
{ before(grammarAccess.getLacunaRule()); }
	 ruleLacuna
{ after(grammarAccess.getLacunaRule()); } 
	 EOF 
;

// Rule Lacuna
ruleLacuna
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLacunaAccess().getGroup()); }
(rule__Lacuna__Group__0)
{ after(grammarAccess.getLacunaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoLacuna
entryRuleNoLacuna 
:
{ before(grammarAccess.getNoLacunaRule()); }
	 ruleNoLacuna
{ after(grammarAccess.getNoLacunaRule()); } 
	 EOF 
;

// Rule NoLacuna
ruleNoLacuna
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoLacunaAccess().getAlternatives()); }
(rule__NoLacuna__Alternatives)
{ after(grammarAccess.getNoLacunaAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeletion
entryRuleDeletion 
:
{ before(grammarAccess.getDeletionRule()); }
	 ruleDeletion
{ after(grammarAccess.getDeletionRule()); } 
	 EOF 
;

// Rule Deletion
ruleDeletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeletionAccess().getGroup()); }
(rule__Deletion__Group__0)
{ after(grammarAccess.getDeletionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoDeletion
entryRuleNoDeletion 
:
{ before(grammarAccess.getNoDeletionRule()); }
	 ruleNoDeletion
{ after(grammarAccess.getNoDeletionRule()); } 
	 EOF 
;

// Rule NoDeletion
ruleNoDeletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoDeletionAccess().getAlternatives()); }
(rule__NoDeletion__Alternatives)
{ after(grammarAccess.getNoDeletionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpandedColumn
entryRuleExpandedColumn 
:
{ before(grammarAccess.getExpandedColumnRule()); }
	 ruleExpandedColumn
{ after(grammarAccess.getExpandedColumnRule()); } 
	 EOF 
;

// Rule ExpandedColumn
ruleExpandedColumn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpandedColumnAccess().getGroup()); }
(rule__ExpandedColumn__Group__0)
{ after(grammarAccess.getExpandedColumnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoExpandedColumn
entryRuleNoExpandedColumn 
:
{ before(grammarAccess.getNoExpandedColumnRule()); }
	 ruleNoExpandedColumn
{ after(grammarAccess.getNoExpandedColumnRule()); } 
	 EOF 
;

// Rule NoExpandedColumn
ruleNoExpandedColumn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoExpandedColumnAccess().getAlternatives()); }
(rule__NoExpandedColumn__Alternatives)
{ after(grammarAccess.getNoExpandedColumnAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRasur
entryRuleRasur 
:
{ before(grammarAccess.getRasurRule()); }
	 ruleRasur
{ after(grammarAccess.getRasurRule()); } 
	 EOF 
;

// Rule Rasur
ruleRasur
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRasurAccess().getGroup()); }
(rule__Rasur__Group__0)
{ after(grammarAccess.getRasurAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoRasur
entryRuleNoRasur 
:
{ before(grammarAccess.getNoRasurRule()); }
	 ruleNoRasur
{ after(grammarAccess.getNoRasurRule()); } 
	 EOF 
;

// Rule NoRasur
ruleNoRasur
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoRasurAccess().getAlternatives()); }
(rule__NoRasur__Alternatives)
{ after(grammarAccess.getNoRasurAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAncientExpanded
entryRuleAncientExpanded 
:
{ before(grammarAccess.getAncientExpandedRule()); }
	 ruleAncientExpanded
{ after(grammarAccess.getAncientExpandedRule()); } 
	 EOF 
;

// Rule AncientExpanded
ruleAncientExpanded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAncientExpandedAccess().getGroup()); }
(rule__AncientExpanded__Group__0)
{ after(grammarAccess.getAncientExpandedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoAncientExpanded
entryRuleNoAncientExpanded 
:
{ before(grammarAccess.getNoAncientExpandedRule()); }
	 ruleNoAncientExpanded
{ after(grammarAccess.getNoAncientExpandedRule()); } 
	 EOF 
;

// Rule NoAncientExpanded
ruleNoAncientExpanded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoAncientExpandedAccess().getAlternatives()); }
(rule__NoAncientExpanded__Alternatives)
{ after(grammarAccess.getNoAncientExpandedAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRestorationOverRasur
entryRuleRestorationOverRasur 
:
{ before(grammarAccess.getRestorationOverRasurRule()); }
	 ruleRestorationOverRasur
{ after(grammarAccess.getRestorationOverRasurRule()); } 
	 EOF 
;

// Rule RestorationOverRasur
ruleRestorationOverRasur
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRestorationOverRasurAccess().getGroup()); }
(rule__RestorationOverRasur__Group__0)
{ after(grammarAccess.getRestorationOverRasurAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoRestorationOverRasur
entryRuleNoRestorationOverRasur 
:
{ before(grammarAccess.getNoRestorationOverRasurRule()); }
	 ruleNoRestorationOverRasur
{ after(grammarAccess.getNoRestorationOverRasurRule()); } 
	 EOF 
;

// Rule NoRestorationOverRasur
ruleNoRestorationOverRasur
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoRestorationOverRasurAccess().getAlternatives()); }
(rule__NoRestorationOverRasur__Alternatives)
{ after(grammarAccess.getNoRestorationOverRasurAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePartialDestruction
entryRulePartialDestruction 
:
{ before(grammarAccess.getPartialDestructionRule()); }
	 rulePartialDestruction
{ after(grammarAccess.getPartialDestructionRule()); } 
	 EOF 
;

// Rule PartialDestruction
rulePartialDestruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPartialDestructionAccess().getGroup()); }
(rule__PartialDestruction__Group__0)
{ after(grammarAccess.getPartialDestructionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoPartialDestruction
entryRuleNoPartialDestruction 
:
{ before(grammarAccess.getNoPartialDestructionRule()); }
	 ruleNoPartialDestruction
{ after(grammarAccess.getNoPartialDestructionRule()); } 
	 EOF 
;

// Rule NoPartialDestruction
ruleNoPartialDestruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoPartialDestructionAccess().getAlternatives()); }
(rule__NoPartialDestruction__Alternatives)
{ after(grammarAccess.getNoPartialDestructionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDestruction
entryRuleDestruction 
:
{ before(grammarAccess.getDestructionRule()); }
	 ruleDestruction
{ after(grammarAccess.getDestructionRule()); } 
	 EOF 
;

// Rule Destruction
ruleDestruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDestructionAccess().getGroup()); }
(rule__Destruction__Group__0)
{ after(grammarAccess.getDestructionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TextContent__Alternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextContentAccess().getSpaceKeyword_1_1_0_0()); }

	' ' 

{ after(grammarAccess.getTextContentAccess().getSpaceKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getTextContentAccess().getNEWLINETerminalRuleCall_1_1_0_1()); }
	RULE_NEWLINE
{ after(grammarAccess.getTextContentAccess().getNEWLINETerminalRuleCall_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceItem__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceItemAccess().getWordParserRuleCall_0()); }
	ruleWord
{ after(grammarAccess.getSentenceItemAccess().getWordParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSentenceItemAccess().getAbstractMarkerParserRuleCall_1()); }
	ruleAbstractMarker
{ after(grammarAccess.getSentenceItemAccess().getAbstractMarkerParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSentenceItemAccess().getAmbivalenceParserRuleCall_2()); }
	ruleAmbivalence
{ after(grammarAccess.getSentenceItemAccess().getAmbivalenceParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMarker__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractMarkerAccess().getMarkerParserRuleCall_0()); }
	ruleMarker
{ after(grammarAccess.getAbstractMarkerAccess().getMarkerParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractMarkerAccess().getVersMarkerParserRuleCall_1()); }
	ruleVersMarker
{ after(grammarAccess.getAbstractMarkerAccess().getVersMarkerParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceItemNoAmbivalence__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceItemNoAmbivalenceAccess().getWordParserRuleCall_0()); }
	ruleWord
{ after(grammarAccess.getSentenceItemNoAmbivalenceAccess().getWordParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSentenceItemNoAmbivalenceAccess().getAbstractMarkerParserRuleCall_1()); }
	ruleAbstractMarker
{ after(grammarAccess.getSentenceItemNoAmbivalenceAccess().getAbstractMarkerParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VersMarker__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersMarkerAccess().getVersbreakMarkerParserRuleCall_0()); }
	ruleVersbreakMarker
{ after(grammarAccess.getVersMarkerAccess().getVersbreakMarkerParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVersMarkerAccess().getVersFrontierMarkerParserRuleCall_1()); }
	ruleVersFrontierMarker
{ after(grammarAccess.getVersMarkerAccess().getVersFrontierMarkerParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getVersMarkerAccess().getBrokenVersbreakMarkerParserRuleCall_2()); }
	ruleBrokenVersbreakMarker
{ after(grammarAccess.getVersMarkerAccess().getBrokenVersbreakMarkerParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WordEnding__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordEndingAccess().getPluralEndingParserRuleCall_0()); }
	rulePluralEnding
{ after(grammarAccess.getWordEndingAccess().getPluralEndingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWordEndingAccess().getDualEndingParserRuleCall_1()); }
	ruleDualEnding
{ after(grammarAccess.getWordEndingAccess().getDualEndingParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getWordEndingAccess().getEndingParserRuleCall_2()); }
	ruleEnding
{ after(grammarAccess.getWordEndingAccess().getEndingParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DualEnding__CharsAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDualEndingAccess().getCharsDUALSTRING_COMMATerminalRuleCall_0_0()); }
	RULE_DUALSTRING_COMMA
{ after(grammarAccess.getDualEndingAccess().getCharsDUALSTRING_COMMATerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getDualEndingAccess().getCharsDUALSTRING_DOTTerminalRuleCall_0_1()); }
	RULE_DUALSTRING_DOT
{ after(grammarAccess.getDualEndingAccess().getCharsDUALSTRING_DOTTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PluralEnding__CharsAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPluralEndingAccess().getCharsPLURALSTRING_COMMATerminalRuleCall_0_0()); }
	RULE_PLURALSTRING_COMMA
{ after(grammarAccess.getPluralEndingAccess().getCharsPLURALSTRING_COMMATerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getPluralEndingAccess().getCharsPLURALSTRING_DOTTerminalRuleCall_0_1()); }
	RULE_PLURALSTRING_DOT
{ after(grammarAccess.getPluralEndingAccess().getCharsPLURALSTRING_DOTTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WordMiddle__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordMiddleAccess().getBracketsParserRuleCall_0()); }
	ruleBrackets
{ after(grammarAccess.getWordMiddleAccess().getBracketsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWordMiddleAccess().getCharsParserRuleCall_1()); }
	ruleChars
{ after(grammarAccess.getWordMiddleAccess().getCharsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interfix__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixAccess().getInterfixSuffixPronomLexicalParserRuleCall_0()); }
	ruleInterfixSuffixPronomLexical
{ after(grammarAccess.getInterfixAccess().getInterfixSuffixPronomLexicalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInterfixAccess().getInterfixPrefixNonLexicalParserRuleCall_1()); }
	ruleInterfixPrefixNonLexical
{ after(grammarAccess.getInterfixAccess().getInterfixPrefixNonLexicalParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInterfixAccess().getInterfixPrefixLexicalParserRuleCall_2()); }
	ruleInterfixPrefixLexical
{ after(grammarAccess.getInterfixAccess().getInterfixPrefixLexicalParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getInterfixAccess().getInterfixConnectionSyllabicGroupParserRuleCall_3()); }
	ruleInterfixConnectionSyllabicGroup
{ after(grammarAccess.getInterfixAccess().getInterfixConnectionSyllabicGroupParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Brackets__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketsAccess().getRasurParserRuleCall_0()); }
	ruleRasur
{ after(grammarAccess.getBracketsAccess().getRasurParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBracketsAccess().getAncientExpandedParserRuleCall_1()); }
	ruleAncientExpanded
{ after(grammarAccess.getBracketsAccess().getAncientExpandedParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBracketsAccess().getRestorationOverRasurParserRuleCall_2()); }
	ruleRestorationOverRasur
{ after(grammarAccess.getBracketsAccess().getRestorationOverRasurParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getBracketsAccess().getExpandedParserRuleCall_3()); }
	ruleExpanded
{ after(grammarAccess.getBracketsAccess().getExpandedParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getBracketsAccess().getDisputableReadingParserRuleCall_4()); }
	ruleDisputableReading
{ after(grammarAccess.getBracketsAccess().getDisputableReadingParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getBracketsAccess().getEmendationParserRuleCall_5()); }
	ruleEmendation
{ after(grammarAccess.getBracketsAccess().getEmendationParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getBracketsAccess().getLacunaParserRuleCall_6()); }
	ruleLacuna
{ after(grammarAccess.getBracketsAccess().getLacunaParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getBracketsAccess().getDeletionParserRuleCall_7()); }
	ruleDeletion
{ after(grammarAccess.getBracketsAccess().getDeletionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getBracketsAccess().getExpandedColumnParserRuleCall_8()); }
	ruleExpandedColumn
{ after(grammarAccess.getBracketsAccess().getExpandedColumnParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getBracketsAccess().getPartialDestructionParserRuleCall_9()); }
	rulePartialDestruction
{ after(grammarAccess.getBracketsAccess().getPartialDestructionParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getBracketsAccess().getDestructionParserRuleCall_10()); }
	ruleDestruction
{ after(grammarAccess.getBracketsAccess().getDestructionParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoExpanded__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoExpandedAccess().getInterfixParserRuleCall_0()); }
	ruleInterfix
{ after(grammarAccess.getNoExpandedAccess().getInterfixParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNoExpandedAccess().getCharsParserRuleCall_1()); }
	ruleChars
{ after(grammarAccess.getNoExpandedAccess().getCharsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoEmendation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoEmendationAccess().getInterfixParserRuleCall_0()); }
	ruleInterfix
{ after(grammarAccess.getNoEmendationAccess().getInterfixParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNoEmendationAccess().getExpandedParserRuleCall_1()); }
	ruleExpanded
{ after(grammarAccess.getNoEmendationAccess().getExpandedParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNoEmendationAccess().getCharsParserRuleCall_2()); }
	ruleChars
{ after(grammarAccess.getNoEmendationAccess().getCharsParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoDisputableReading__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoDisputableReadingAccess().getInterfixParserRuleCall_0()); }
	ruleInterfix
{ after(grammarAccess.getNoDisputableReadingAccess().getInterfixParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNoDisputableReadingAccess().getExpandedParserRuleCall_1()); }
	ruleExpanded
{ after(grammarAccess.getNoDisputableReadingAccess().getExpandedParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNoDisputableReadingAccess().getCharsParserRuleCall_2()); }
	ruleChars
{ after(grammarAccess.getNoDisputableReadingAccess().getCharsParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoLacuna__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoLacunaAccess().getInterfixParserRuleCall_0()); }
	ruleInterfix
{ after(grammarAccess.getNoLacunaAccess().getInterfixParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNoLacunaAccess().getExpandedParserRuleCall_1()); }
	ruleExpanded
{ after(grammarAccess.getNoLacunaAccess().getExpandedParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNoLacunaAccess().getCharsParserRuleCall_2()); }
	ruleChars
{ after(grammarAccess.getNoLacunaAccess().getCharsParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoDeletion__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoDeletionAccess().getInterfixParserRuleCall_0()); }
	ruleInterfix
{ after(grammarAccess.getNoDeletionAccess().getInterfixParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNoDeletionAccess().getCharsParserRuleCall_1()); }
	ruleChars
{ after(grammarAccess.getNoDeletionAccess().getCharsParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNoDeletionAccess().getPartialDestructionParserRuleCall_2()); }
	rulePartialDestruction
{ after(grammarAccess.getNoDeletionAccess().getPartialDestructionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNoDeletionAccess().getExpandedParserRuleCall_3()); }
	ruleExpanded
{ after(grammarAccess.getNoDeletionAccess().getExpandedParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoExpandedColumn__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoExpandedColumnAccess().getInterfixParserRuleCall_0()); }
	ruleInterfix
{ after(grammarAccess.getNoExpandedColumnAccess().getInterfixParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNoExpandedColumnAccess().getCharsParserRuleCall_1()); }
	ruleChars
{ after(grammarAccess.getNoExpandedColumnAccess().getCharsParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNoExpandedColumnAccess().getExpandedParserRuleCall_2()); }
	ruleExpanded
{ after(grammarAccess.getNoExpandedColumnAccess().getExpandedParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoRasur__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRasurAccess().getInterfixParserRuleCall_0()); }
	ruleInterfix
{ after(grammarAccess.getNoRasurAccess().getInterfixParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNoRasurAccess().getCharsParserRuleCall_1()); }
	ruleChars
{ after(grammarAccess.getNoRasurAccess().getCharsParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNoRasurAccess().getExpandedParserRuleCall_2()); }
	ruleExpanded
{ after(grammarAccess.getNoRasurAccess().getExpandedParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoAncientExpanded__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoAncientExpandedAccess().getCharsParserRuleCall_0()); }
	ruleChars
{ after(grammarAccess.getNoAncientExpandedAccess().getCharsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNoAncientExpandedAccess().getExpandedParserRuleCall_1()); }
	ruleExpanded
{ after(grammarAccess.getNoAncientExpandedAccess().getExpandedParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoRestorationOverRasur__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoRestorationOverRasurAccess().getCharsParserRuleCall_0()); }
	ruleChars
{ after(grammarAccess.getNoRestorationOverRasurAccess().getCharsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNoRestorationOverRasurAccess().getExpandedParserRuleCall_1()); }
	ruleExpanded
{ after(grammarAccess.getNoRestorationOverRasurAccess().getExpandedParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoPartialDestruction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoPartialDestructionAccess().getCharsParserRuleCall_0()); }
	ruleChars
{ after(grammarAccess.getNoPartialDestructionAccess().getCharsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNoPartialDestructionAccess().getDeletionParserRuleCall_1()); }
	ruleDeletion
{ after(grammarAccess.getNoPartialDestructionAccess().getDeletionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNoPartialDestructionAccess().getInterfixParserRuleCall_2()); }
	ruleInterfix
{ after(grammarAccess.getNoPartialDestructionAccess().getInterfixParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNoPartialDestructionAccess().getExpandedParserRuleCall_3()); }
	ruleExpanded
{ after(grammarAccess.getNoPartialDestructionAccess().getExpandedParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TextContent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextContent__Group__0__Impl
	rule__TextContent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextContent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextContentAccess().getTextContentAction_0()); }
(

)
{ after(grammarAccess.getTextContentAccess().getTextContentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextContent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextContent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextContent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextContentAccess().getGroup_1()); }
(rule__TextContent__Group_1__0)
{ after(grammarAccess.getTextContentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TextContent__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextContent__Group_1__0__Impl
	rule__TextContent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextContent__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextContentAccess().getItemsAssignment_1_0()); }
(rule__TextContent__ItemsAssignment_1_0)
{ after(grammarAccess.getTextContentAccess().getItemsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextContent__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextContent__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextContent__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextContentAccess().getGroup_1_1()); }
(rule__TextContent__Group_1_1__0)*
{ after(grammarAccess.getTextContentAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TextContent__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextContent__Group_1_1__0__Impl
	rule__TextContent__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextContent__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextContentAccess().getAlternatives_1_1_0()); }
(rule__TextContent__Alternatives_1_1_0)?
{ after(grammarAccess.getTextContentAccess().getAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextContent__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextContent__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextContent__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextContentAccess().getItemsAssignment_1_1_1()); }
(rule__TextContent__ItemsAssignment_1_1_1)
{ after(grammarAccess.getTextContentAccess().getItemsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sentence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sentence__Group__0__Impl
	rule__Sentence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceAccess().getSectionSignKeyword_0()); }

	'\u00A7' 

{ after(grammarAccess.getSentenceAccess().getSectionSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sentence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sentence__Group__1__Impl
	rule__Sentence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceAccess().getGroup_1()); }
(rule__Sentence__Group_1__0)
{ after(grammarAccess.getSentenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sentence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sentence__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceAccess().getSectionSignKeyword_2()); }

	'\u00A7' 

{ after(grammarAccess.getSentenceAccess().getSectionSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sentence__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sentence__Group_1__0__Impl
	rule__Sentence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceAccess().getItemsAssignment_1_0()); }
(rule__Sentence__ItemsAssignment_1_0)
{ after(grammarAccess.getSentenceAccess().getItemsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sentence__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sentence__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceAccess().getGroup_1_1()); }
(rule__Sentence__Group_1_1__0)*
{ after(grammarAccess.getSentenceAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sentence__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sentence__Group_1_1__0__Impl
	rule__Sentence__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceAccess().getSpaceKeyword_1_1_0()); }

	' ' 

{ after(grammarAccess.getSentenceAccess().getSpaceKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sentence__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sentence__Group_1_1__1__Impl
	rule__Sentence__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceAccess().getNEWLINETerminalRuleCall_1_1_1()); }
(	RULE_NEWLINE)?
{ after(grammarAccess.getSentenceAccess().getNEWLINETerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sentence__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sentence__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceAccess().getItemsAssignment_1_1_2()); }
(rule__Sentence__ItemsAssignment_1_1_2)
{ after(grammarAccess.getSentenceAccess().getItemsAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ambivalence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ambivalence__Group__0__Impl
	rule__Ambivalence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ambivalence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmbivalenceAccess().getPercentSignKeyword_0()); }

	'%' 

{ after(grammarAccess.getAmbivalenceAccess().getPercentSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ambivalence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ambivalence__Group__1__Impl
	rule__Ambivalence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ambivalence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmbivalenceAccess().getGroup_1()); }
(rule__Ambivalence__Group_1__0)
{ after(grammarAccess.getAmbivalenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ambivalence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ambivalence__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ambivalence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmbivalenceAccess().getPercentSignKeyword_2()); }

	'%' 

{ after(grammarAccess.getAmbivalenceAccess().getPercentSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ambivalence__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ambivalence__Group_1__0__Impl
	rule__Ambivalence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ambivalence__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmbivalenceAccess().getCasesAssignment_1_0()); }
(rule__Ambivalence__CasesAssignment_1_0)
{ after(grammarAccess.getAmbivalenceAccess().getCasesAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ambivalence__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ambivalence__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ambivalence__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAmbivalenceAccess().getGroup_1_1()); }
(rule__Ambivalence__Group_1_1__0)
{ after(grammarAccess.getAmbivalenceAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getAmbivalenceAccess().getGroup_1_1()); }
(rule__Ambivalence__Group_1_1__0)*
{ after(grammarAccess.getAmbivalenceAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ambivalence__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ambivalence__Group_1_1__0__Impl
	rule__Ambivalence__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ambivalence__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmbivalenceAccess().getSemicolonSpaceKeyword_1_1_0()); }

	'; ' 

{ after(grammarAccess.getAmbivalenceAccess().getSemicolonSpaceKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ambivalence__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ambivalence__Group_1_1__1__Impl
	rule__Ambivalence__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ambivalence__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmbivalenceAccess().getNEWLINETerminalRuleCall_1_1_1()); }
(	RULE_NEWLINE)?
{ after(grammarAccess.getAmbivalenceAccess().getNEWLINETerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ambivalence__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ambivalence__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ambivalence__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmbivalenceAccess().getCasesAssignment_1_1_2()); }
(rule__Ambivalence__CasesAssignment_1_1_2)
{ after(grammarAccess.getAmbivalenceAccess().getCasesAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Case__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__0__Impl
	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getNameAssignment_0()); }
(rule__Case__NameAssignment_0)
{ after(grammarAccess.getCaseAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__1__Impl
	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getNEWLINETerminalRuleCall_1()); }
(	RULE_NEWLINE)?
{ after(grammarAccess.getCaseAccess().getNEWLINETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getGroup_2()); }
(rule__Case__Group_2__0)
{ after(grammarAccess.getCaseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Case__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_2__0__Impl
	rule__Case__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getItemsAssignment_2_0()); }
(rule__Case__ItemsAssignment_2_0)
{ after(grammarAccess.getCaseAccess().getItemsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getGroup_2_1()); }
(rule__Case__Group_2_1__0)*
{ after(grammarAccess.getCaseAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Case__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_2_1__0__Impl
	rule__Case__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getSpaceKeyword_2_1_0()); }

	' ' 

{ after(grammarAccess.getCaseAccess().getSpaceKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_2_1__1__Impl
	rule__Case__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getNEWLINETerminalRuleCall_2_1_1()); }
(	RULE_NEWLINE)?
{ after(grammarAccess.getCaseAccess().getNEWLINETerminalRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getItemsAssignment_2_1_2()); }
(rule__Case__ItemsAssignment_2_1_2)
{ after(grammarAccess.getCaseAccess().getItemsAssignment_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VersFrontierMarker__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersFrontierMarker__Group__0__Impl
	rule__VersFrontierMarker__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersFrontierMarker__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersFrontierMarkerAccess().getVersFrontierMarkerAction_0()); }
(

)
{ after(grammarAccess.getVersFrontierMarkerAccess().getVersFrontierMarkerAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VersFrontierMarker__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersFrontierMarker__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersFrontierMarker__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersFrontierMarkerAccess().getLeadSurrogateDb80TrailSurrogateDc81Keyword_1()); }

	'\uDB80\uDC81' 

{ after(grammarAccess.getVersFrontierMarkerAccess().getLeadSurrogateDb80TrailSurrogateDc81Keyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VersbreakMarker__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersbreakMarker__Group__0__Impl
	rule__VersbreakMarker__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VersbreakMarker__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersbreakMarkerAccess().getVersbreakMarkerAction_0()); }
(

)
{ after(grammarAccess.getVersbreakMarkerAccess().getVersbreakMarkerAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VersbreakMarker__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VersbreakMarker__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VersbreakMarker__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVersbreakMarkerAccess().getLeadSurrogateDb80TrailSurrogateDc80Keyword_1()); }

	'\uDB80\uDC80' 

{ after(grammarAccess.getVersbreakMarkerAccess().getLeadSurrogateDb80TrailSurrogateDc80Keyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BrokenVersbreakMarker__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BrokenVersbreakMarker__Group__0__Impl
	rule__BrokenVersbreakMarker__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BrokenVersbreakMarker__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrokenVersbreakMarkerAccess().getBrokenVersbreakMarkerAction_0()); }
(

)
{ after(grammarAccess.getBrokenVersbreakMarkerAccess().getBrokenVersbreakMarkerAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BrokenVersbreakMarker__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BrokenVersbreakMarker__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BrokenVersbreakMarker__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrokenVersbreakMarkerAccess().getLeadSurrogateDb80TrailSurrogateDc82Keyword_1()); }

	'\uDB80\uDC82' 

{ after(grammarAccess.getBrokenVersbreakMarkerAccess().getLeadSurrogateDb80TrailSurrogateDc82Keyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Word__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Word__Group__0__Impl
	rule__Word__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Word__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getWordAction_0()); }
(

)
{ after(grammarAccess.getWordAccess().getWordAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Word__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Word__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Word__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getGroup_1()); }
(rule__Word__Group_1__0)
{ after(grammarAccess.getWordAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Word__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Word__Group_1__0__Impl
	rule__Word__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Word__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getWCharAssignment_1_0()); }
(rule__Word__WCharAssignment_1_0)
{ after(grammarAccess.getWordAccess().getWCharAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Word__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Word__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Word__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getGroup_1_1()); }
(rule__Word__Group_1_1__0)*
{ after(grammarAccess.getWordAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Word__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Word__Group_1_1__0__Impl
	rule__Word__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Word__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getHyphenMinusKeyword_1_1_0()); }

	'-' 

{ after(grammarAccess.getWordAccess().getHyphenMinusKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Word__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Word__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Word__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getWCharAssignment_1_1_1()); }
(rule__Word__WCharAssignment_1_1_1)
{ after(grammarAccess.getWordAccess().getWCharAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WordPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordPart__Group__0__Impl
	rule__WordPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WordPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordPartAccess().getEqualsSignKeyword_0()); }
(
	'=' 
)?
{ after(grammarAccess.getWordPartAccess().getEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WordPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WordPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordPartAccess().getGroup_1()); }
(rule__WordPart__Group_1__0)
{ after(grammarAccess.getWordPartAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WordPart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordPart__Group_1__0__Impl
	rule__WordPart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WordPart__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordPartAccess().getWCharAssignment_1_0()); }
(rule__WordPart__WCharAssignment_1_0)
{ after(grammarAccess.getWordPartAccess().getWCharAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WordPart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordPart__Group_1__1__Impl
	rule__WordPart__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WordPart__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordPartAccess().getWCharAssignment_1_1()); }
(rule__WordPart__WCharAssignment_1_1)*
{ after(grammarAccess.getWordPartAccess().getWCharAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WordPart__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordPart__Group_1__2__Impl
	rule__WordPart__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WordPart__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordPartAccess().getWCharAssignment_1_2()); }
(rule__WordPart__WCharAssignment_1_2)?
{ after(grammarAccess.getWordPartAccess().getWCharAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WordPart__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WordPart__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WordPart__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordPartAccess().getWCharAssignment_1_3()); }
(rule__WordPart__WCharAssignment_1_3)?
{ after(grammarAccess.getWordPartAccess().getWCharAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfixLexical__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixLexical__Group__0__Impl
	rule__InterfixLexical__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixLexical__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixLexicalAccess().getInterfixLexicalAction_0()); }
(

)
{ after(grammarAccess.getInterfixLexicalAccess().getInterfixLexicalAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfixLexical__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixLexical__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixLexical__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixLexicalAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getInterfixLexicalAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfixFlexion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixFlexion__Group__0__Impl
	rule__InterfixFlexion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixFlexion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixFlexionAccess().getInterfixFlexionAction_0()); }
(

)
{ after(grammarAccess.getInterfixFlexionAccess().getInterfixFlexionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfixFlexion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixFlexion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixFlexion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixFlexionAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getInterfixFlexionAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfixSuffixPronomLexical__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixSuffixPronomLexical__Group__0__Impl
	rule__InterfixSuffixPronomLexical__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixSuffixPronomLexical__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixSuffixPronomLexicalAccess().getInterfixSuffixPronomLexicalAction_0()); }
(

)
{ after(grammarAccess.getInterfixSuffixPronomLexicalAccess().getInterfixSuffixPronomLexicalAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfixSuffixPronomLexical__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixSuffixPronomLexical__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixSuffixPronomLexical__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixSuffixPronomLexicalAccess().getIdenticalToKeyword_1()); }

	'\u2261' 

{ after(grammarAccess.getInterfixSuffixPronomLexicalAccess().getIdenticalToKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfixPrefixNonLexical__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixPrefixNonLexical__Group__0__Impl
	rule__InterfixPrefixNonLexical__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixPrefixNonLexical__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixPrefixNonLexicalAccess().getInterfixPrefixNonLexicalAction_0()); }
(

)
{ after(grammarAccess.getInterfixPrefixNonLexicalAccess().getInterfixPrefixNonLexicalAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfixPrefixNonLexical__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixPrefixNonLexical__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixPrefixNonLexical__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixPrefixNonLexicalAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getInterfixPrefixNonLexicalAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfixPrefixLexical__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixPrefixLexical__Group__0__Impl
	rule__InterfixPrefixLexical__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixPrefixLexical__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixPrefixLexicalAccess().getInterfixPrefixLexicalAction_0()); }
(

)
{ after(grammarAccess.getInterfixPrefixLexicalAccess().getInterfixPrefixLexicalAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfixPrefixLexical__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixPrefixLexical__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixPrefixLexical__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixPrefixLexicalAccess().getVerticalEllipsisKeyword_1()); }

	'\u22EE' 

{ after(grammarAccess.getInterfixPrefixLexicalAccess().getVerticalEllipsisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfixConnectionSyllabicGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixConnectionSyllabicGroup__Group__0__Impl
	rule__InterfixConnectionSyllabicGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixConnectionSyllabicGroup__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixConnectionSyllabicGroupAccess().getInterfixConnectionSyllabicGroupAction_0()); }
(

)
{ after(grammarAccess.getInterfixConnectionSyllabicGroupAccess().getInterfixConnectionSyllabicGroupAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfixConnectionSyllabicGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfixConnectionSyllabicGroup__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfixConnectionSyllabicGroup__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfixConnectionSyllabicGroupAccess().getTildeKeyword_1()); }

	'~' 

{ after(grammarAccess.getInterfixConnectionSyllabicGroupAccess().getTildeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expanded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expanded__Group__0__Impl
	rule__Expanded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expanded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpandedAccess().getExpandedAction_0()); }
(

)
{ after(grammarAccess.getExpandedAccess().getExpandedAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expanded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expanded__Group__1__Impl
	rule__Expanded__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expanded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpandedAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getExpandedAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expanded__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expanded__Group__2__Impl
	rule__Expanded__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expanded__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getExpandedAccess().getWCharAssignment_2()); }
(rule__Expanded__WCharAssignment_2)
{ after(grammarAccess.getExpandedAccess().getWCharAssignment_2()); }
)
(
{ before(grammarAccess.getExpandedAccess().getWCharAssignment_2()); }
(rule__Expanded__WCharAssignment_2)*
{ after(grammarAccess.getExpandedAccess().getWCharAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expanded__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expanded__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expanded__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpandedAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getExpandedAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Emendation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emendation__Group__0__Impl
	rule__Emendation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emendation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmendationAccess().getEmendationAction_0()); }
(

)
{ after(grammarAccess.getEmendationAccess().getEmendationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emendation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emendation__Group__1__Impl
	rule__Emendation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emendation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmendationAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getEmendationAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emendation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emendation__Group__2__Impl
	rule__Emendation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Emendation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEmendationAccess().getWCharAssignment_2()); }
(rule__Emendation__WCharAssignment_2)
{ after(grammarAccess.getEmendationAccess().getWCharAssignment_2()); }
)
(
{ before(grammarAccess.getEmendationAccess().getWCharAssignment_2()); }
(rule__Emendation__WCharAssignment_2)*
{ after(grammarAccess.getEmendationAccess().getWCharAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emendation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emendation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emendation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmendationAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getEmendationAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DisputableReading__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisputableReading__Group__0__Impl
	rule__DisputableReading__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DisputableReading__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisputableReadingAccess().getDisputableReadingAction_0()); }
(

)
{ after(grammarAccess.getDisputableReadingAccess().getDisputableReadingAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DisputableReading__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisputableReading__Group__1__Impl
	rule__DisputableReading__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DisputableReading__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisputableReadingAccess().getReversedQuestionMarkKeyword_1()); }

	'\u2E2E' 

{ after(grammarAccess.getDisputableReadingAccess().getReversedQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DisputableReading__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisputableReading__Group__2__Impl
	rule__DisputableReading__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DisputableReading__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDisputableReadingAccess().getWCharAssignment_2()); }
(rule__DisputableReading__WCharAssignment_2)
{ after(grammarAccess.getDisputableReadingAccess().getWCharAssignment_2()); }
)
(
{ before(grammarAccess.getDisputableReadingAccess().getWCharAssignment_2()); }
(rule__DisputableReading__WCharAssignment_2)*
{ after(grammarAccess.getDisputableReadingAccess().getWCharAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DisputableReading__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DisputableReading__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DisputableReading__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisputableReadingAccess().getQuestionMarkKeyword_3()); }

	'?' 

{ after(grammarAccess.getDisputableReadingAccess().getQuestionMarkKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Lacuna__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lacuna__Group__0__Impl
	rule__Lacuna__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lacuna__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLacunaAccess().getLacunaAction_0()); }
(

)
{ after(grammarAccess.getLacunaAccess().getLacunaAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lacuna__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lacuna__Group__1__Impl
	rule__Lacuna__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Lacuna__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLacunaAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getLacunaAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lacuna__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lacuna__Group__2__Impl
	rule__Lacuna__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Lacuna__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLacunaAccess().getWCharAssignment_2()); }
(rule__Lacuna__WCharAssignment_2)
{ after(grammarAccess.getLacunaAccess().getWCharAssignment_2()); }
)
(
{ before(grammarAccess.getLacunaAccess().getWCharAssignment_2()); }
(rule__Lacuna__WCharAssignment_2)*
{ after(grammarAccess.getLacunaAccess().getWCharAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Lacuna__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Lacuna__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lacuna__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLacunaAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getLacunaAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Deletion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Deletion__Group__0__Impl
	rule__Deletion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Deletion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeletionAccess().getDeletionAction_0()); }
(

)
{ after(grammarAccess.getDeletionAccess().getDeletionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Deletion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Deletion__Group__1__Impl
	rule__Deletion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Deletion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeletionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getDeletionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Deletion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Deletion__Group__2__Impl
	rule__Deletion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Deletion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDeletionAccess().getWCharAssignment_2()); }
(rule__Deletion__WCharAssignment_2)
{ after(grammarAccess.getDeletionAccess().getWCharAssignment_2()); }
)
(
{ before(grammarAccess.getDeletionAccess().getWCharAssignment_2()); }
(rule__Deletion__WCharAssignment_2)*
{ after(grammarAccess.getDeletionAccess().getWCharAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Deletion__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Deletion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Deletion__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeletionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getDeletionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExpandedColumn__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpandedColumn__Group__0__Impl
	rule__ExpandedColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpandedColumn__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpandedColumnAccess().getExpandedColumnAction_0()); }
(

)
{ after(grammarAccess.getExpandedColumnAccess().getExpandedColumnAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpandedColumn__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpandedColumn__Group__1__Impl
	rule__ExpandedColumn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpandedColumn__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpandedColumnAccess().getLessThanSignLessThanSignKeyword_1()); }

	'<<' 

{ after(grammarAccess.getExpandedColumnAccess().getLessThanSignLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpandedColumn__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpandedColumn__Group__2__Impl
	rule__ExpandedColumn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpandedColumn__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getExpandedColumnAccess().getWCharAssignment_2()); }
(rule__ExpandedColumn__WCharAssignment_2)
{ after(grammarAccess.getExpandedColumnAccess().getWCharAssignment_2()); }
)
(
{ before(grammarAccess.getExpandedColumnAccess().getWCharAssignment_2()); }
(rule__ExpandedColumn__WCharAssignment_2)*
{ after(grammarAccess.getExpandedColumnAccess().getWCharAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpandedColumn__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpandedColumn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpandedColumn__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpandedColumnAccess().getGreaterThanSignGreaterThanSignKeyword_3()); }

	'>>' 

{ after(grammarAccess.getExpandedColumnAccess().getGreaterThanSignGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Rasur__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rasur__Group__0__Impl
	rule__Rasur__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rasur__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasurAccess().getRasurAction_0()); }
(

)
{ after(grammarAccess.getRasurAccess().getRasurAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rasur__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rasur__Group__1__Impl
	rule__Rasur__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rasur__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasurAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1()); }

	'{{' 

{ after(grammarAccess.getRasurAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rasur__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rasur__Group__2__Impl
	rule__Rasur__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rasur__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRasurAccess().getWCharAssignment_2()); }
(rule__Rasur__WCharAssignment_2)
{ after(grammarAccess.getRasurAccess().getWCharAssignment_2()); }
)
(
{ before(grammarAccess.getRasurAccess().getWCharAssignment_2()); }
(rule__Rasur__WCharAssignment_2)*
{ after(grammarAccess.getRasurAccess().getWCharAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rasur__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rasur__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rasur__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasurAccess().getRightCurlyBracketRightCurlyBracketKeyword_3()); }

	'}}' 

{ after(grammarAccess.getRasurAccess().getRightCurlyBracketRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AncientExpanded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AncientExpanded__Group__0__Impl
	rule__AncientExpanded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AncientExpanded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAncientExpandedAccess().getAncientExpandedAction_0()); }
(

)
{ after(grammarAccess.getAncientExpandedAccess().getAncientExpandedAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AncientExpanded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AncientExpanded__Group__1__Impl
	rule__AncientExpanded__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AncientExpanded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAncientExpandedAccess().getLeftParenthesisLeftParenthesisKeyword_1()); }

	'((' 

{ after(grammarAccess.getAncientExpandedAccess().getLeftParenthesisLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AncientExpanded__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AncientExpanded__Group__2__Impl
	rule__AncientExpanded__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AncientExpanded__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAncientExpandedAccess().getWCharAssignment_2()); }
(rule__AncientExpanded__WCharAssignment_2)
{ after(grammarAccess.getAncientExpandedAccess().getWCharAssignment_2()); }
)
(
{ before(grammarAccess.getAncientExpandedAccess().getWCharAssignment_2()); }
(rule__AncientExpanded__WCharAssignment_2)*
{ after(grammarAccess.getAncientExpandedAccess().getWCharAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AncientExpanded__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AncientExpanded__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AncientExpanded__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAncientExpandedAccess().getRightParenthesisRightParenthesisKeyword_3()); }

	'))' 

{ after(grammarAccess.getAncientExpandedAccess().getRightParenthesisRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RestorationOverRasur__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestorationOverRasur__Group__0__Impl
	rule__RestorationOverRasur__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestorationOverRasur__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestorationOverRasurAccess().getRestorationOverRasurAction_0()); }
(

)
{ after(grammarAccess.getRestorationOverRasurAccess().getRestorationOverRasurAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestorationOverRasur__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestorationOverRasur__Group__1__Impl
	rule__RestorationOverRasur__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RestorationOverRasur__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestorationOverRasurAccess().getLeftSquareBracketLeftSquareBracketKeyword_1()); }

	'[[' 

{ after(grammarAccess.getRestorationOverRasurAccess().getLeftSquareBracketLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestorationOverRasur__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestorationOverRasur__Group__2__Impl
	rule__RestorationOverRasur__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RestorationOverRasur__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRestorationOverRasurAccess().getWCharAssignment_2()); }
(rule__RestorationOverRasur__WCharAssignment_2)
{ after(grammarAccess.getRestorationOverRasurAccess().getWCharAssignment_2()); }
)
(
{ before(grammarAccess.getRestorationOverRasurAccess().getWCharAssignment_2()); }
(rule__RestorationOverRasur__WCharAssignment_2)*
{ after(grammarAccess.getRestorationOverRasurAccess().getWCharAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestorationOverRasur__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RestorationOverRasur__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestorationOverRasur__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestorationOverRasurAccess().getRightSquareBracketRightSquareBracketKeyword_3()); }

	']]' 

{ after(grammarAccess.getRestorationOverRasurAccess().getRightSquareBracketRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PartialDestruction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartialDestruction__Group__0__Impl
	rule__PartialDestruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialDestruction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartialDestructionAccess().getPartialDestructionAction_0()); }
(

)
{ after(grammarAccess.getPartialDestructionAccess().getPartialDestructionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartialDestruction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartialDestruction__Group__1__Impl
	rule__PartialDestruction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialDestruction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartialDestructionAccess().getTopLeftHalfBracketKeyword_1()); }

	'\u2E22' 

{ after(grammarAccess.getPartialDestructionAccess().getTopLeftHalfBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartialDestruction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartialDestruction__Group__2__Impl
	rule__PartialDestruction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialDestruction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPartialDestructionAccess().getWCharAssignment_2()); }
(rule__PartialDestruction__WCharAssignment_2)
{ after(grammarAccess.getPartialDestructionAccess().getWCharAssignment_2()); }
)
(
{ before(grammarAccess.getPartialDestructionAccess().getWCharAssignment_2()); }
(rule__PartialDestruction__WCharAssignment_2)*
{ after(grammarAccess.getPartialDestructionAccess().getWCharAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PartialDestruction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PartialDestruction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialDestruction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartialDestructionAccess().getTopRightHalfBracketKeyword_3()); }

	'\u2E23' 

{ after(grammarAccess.getPartialDestructionAccess().getTopRightHalfBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Destruction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Destruction__Group__0__Impl
	rule__Destruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Destruction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDestructionAccess().getDestructionAction_0()); }
(

)
{ after(grammarAccess.getDestructionAccess().getDestructionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Destruction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Destruction__Group__1__Impl
	rule__Destruction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Destruction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDestructionAccess().getHyphenMinusHyphenMinusKeyword_1()); }

	'--' 

{ after(grammarAccess.getDestructionAccess().getHyphenMinusHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Destruction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Destruction__Group__2__Impl
	rule__Destruction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Destruction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDestructionAccess().getCommentAssignment_2()); }
(rule__Destruction__CommentAssignment_2)
{ after(grammarAccess.getDestructionAccess().getCommentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Destruction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Destruction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Destruction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDestructionAccess().getHyphenMinusHyphenMinusKeyword_3()); }

	'--' 

{ after(grammarAccess.getDestructionAccess().getHyphenMinusHyphenMinusKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__TextContent__ItemsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextContentAccess().getItemsTextItemParserRuleCall_1_0_0()); }
	ruleTextItem{ after(grammarAccess.getTextContentAccess().getItemsTextItemParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextContent__ItemsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextContentAccess().getItemsTextItemParserRuleCall_1_1_1_0()); }
	ruleTextItem{ after(grammarAccess.getTextContentAccess().getItemsTextItemParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__ItemsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceAccess().getItemsSentenceItemParserRuleCall_1_0_0()); }
	ruleSentenceItem{ after(grammarAccess.getSentenceAccess().getItemsSentenceItemParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sentence__ItemsAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSentenceAccess().getItemsSentenceItemParserRuleCall_1_1_2_0()); }
	ruleSentenceItem{ after(grammarAccess.getSentenceAccess().getItemsSentenceItemParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ambivalence__CasesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmbivalenceAccess().getCasesCaseParserRuleCall_1_0_0()); }
	ruleCase{ after(grammarAccess.getAmbivalenceAccess().getCasesCaseParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ambivalence__CasesAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmbivalenceAccess().getCasesCaseParserRuleCall_1_1_2_0()); }
	ruleCase{ after(grammarAccess.getAmbivalenceAccess().getCasesCaseParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getNameCASESTRINGTerminalRuleCall_0_0()); }
	RULE_CASESTRING{ after(grammarAccess.getCaseAccess().getNameCASESTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ItemsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getItemsSentenceItemNoAmbivalenceParserRuleCall_2_0_0()); }
	ruleSentenceItemNoAmbivalence{ after(grammarAccess.getCaseAccess().getItemsSentenceItemNoAmbivalenceParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__ItemsAssignment_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getItemsSentenceItemNoAmbivalenceParserRuleCall_2_1_2_0()); }
	ruleSentenceItemNoAmbivalence{ after(grammarAccess.getCaseAccess().getItemsSentenceItemNoAmbivalenceParserRuleCall_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Marker__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMarkerAccess().getTypeBETWEEN_HASHESTerminalRuleCall_0()); }
	RULE_BETWEEN_HASHES{ after(grammarAccess.getMarkerAccess().getTypeBETWEEN_HASHESTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Word__WCharAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getWCharWordPartParserRuleCall_1_0_0()); }
	ruleWordPart{ after(grammarAccess.getWordAccess().getWCharWordPartParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Word__WCharAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordAccess().getWCharWordPartParserRuleCall_1_1_1_0()); }
	ruleWordPart{ after(grammarAccess.getWordAccess().getWCharWordPartParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WordPart__WCharAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordPartAccess().getWCharWordMiddleParserRuleCall_1_0_0()); }
	ruleWordMiddle{ after(grammarAccess.getWordPartAccess().getWCharWordMiddleParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WordPart__WCharAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordPartAccess().getWCharWordMiddleParserRuleCall_1_1_0()); }
	ruleWordMiddle{ after(grammarAccess.getWordPartAccess().getWCharWordMiddleParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WordPart__WCharAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordPartAccess().getWCharWordEndingParserRuleCall_1_2_0()); }
	ruleWordEnding{ after(grammarAccess.getWordPartAccess().getWCharWordEndingParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WordPart__WCharAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWordPartAccess().getWCharWordEndingParserRuleCall_1_3_0()); }
	ruleWordEnding{ after(grammarAccess.getWordPartAccess().getWCharWordEndingParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ending__CharsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndingAccess().getCharsSuffixCharsParserRuleCall_0()); }
	ruleSuffixChars{ after(grammarAccess.getEndingAccess().getCharsSuffixCharsParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DualEnding__CharsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDualEndingAccess().getCharsAlternatives_0()); }
(rule__DualEnding__CharsAlternatives_0)
{ after(grammarAccess.getDualEndingAccess().getCharsAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PluralEnding__CharsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPluralEndingAccess().getCharsAlternatives_0()); }
(rule__PluralEnding__CharsAlternatives_0)
{ after(grammarAccess.getPluralEndingAccess().getCharsAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Chars__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharsAccess().getNameEGYSTRINGTerminalRuleCall_0()); }
	RULE_EGYSTRING{ after(grammarAccess.getCharsAccess().getNameEGYSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuffixChars__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuffixCharsAccess().getNameSUFFIXSTRINGTerminalRuleCall_0()); }
	RULE_SUFFIXSTRING{ after(grammarAccess.getSuffixCharsAccess().getNameSUFFIXSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expanded__WCharAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpandedAccess().getWCharNoExpandedParserRuleCall_2_0()); }
	ruleNoExpanded{ after(grammarAccess.getExpandedAccess().getWCharNoExpandedParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emendation__WCharAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmendationAccess().getWCharNoEmendationParserRuleCall_2_0()); }
	ruleNoEmendation{ after(grammarAccess.getEmendationAccess().getWCharNoEmendationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DisputableReading__WCharAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisputableReadingAccess().getWCharNoDisputableReadingParserRuleCall_2_0()); }
	ruleNoDisputableReading{ after(grammarAccess.getDisputableReadingAccess().getWCharNoDisputableReadingParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Lacuna__WCharAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLacunaAccess().getWCharNoLacunaParserRuleCall_2_0()); }
	ruleNoLacuna{ after(grammarAccess.getLacunaAccess().getWCharNoLacunaParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Deletion__WCharAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeletionAccess().getWCharNoDeletionParserRuleCall_2_0()); }
	ruleNoDeletion{ after(grammarAccess.getDeletionAccess().getWCharNoDeletionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpandedColumn__WCharAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpandedColumnAccess().getWCharNoExpandedColumnParserRuleCall_2_0()); }
	ruleNoExpandedColumn{ after(grammarAccess.getExpandedColumnAccess().getWCharNoExpandedColumnParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rasur__WCharAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRasurAccess().getWCharNoRasurParserRuleCall_2_0()); }
	ruleNoRasur{ after(grammarAccess.getRasurAccess().getWCharNoRasurParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AncientExpanded__WCharAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAncientExpandedAccess().getWCharNoAncientExpandedParserRuleCall_2_0()); }
	ruleNoAncientExpanded{ after(grammarAccess.getAncientExpandedAccess().getWCharNoAncientExpandedParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RestorationOverRasur__WCharAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestorationOverRasurAccess().getWCharNoRestorationOverRasurParserRuleCall_2_0()); }
	ruleNoRestorationOverRasur{ after(grammarAccess.getRestorationOverRasurAccess().getWCharNoRestorationOverRasurParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PartialDestruction__WCharAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPartialDestructionAccess().getWCharNoPartialDestructionParserRuleCall_2_0()); }
	ruleNoPartialDestruction{ after(grammarAccess.getPartialDestructionAccess().getWCharNoPartialDestructionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Destruction__CommentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDestructionAccess().getCommentEGYSTRINGTerminalRuleCall_2_0()); }
	RULE_EGYSTRING{ after(grammarAccess.getDestructionAccess().getCommentEGYSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_WS : (' '|'\t');

RULE_NEWLINE : ('\r'|'\n'|'\r\n'|'\t');

RULE_CASESTRING : 'case ' ~(':')+ ': ';

RULE_BETWEEN_HASHES : '#' ('a'..'z'|'A'..'Z'|RULE_INT|RULE_EGYSTRING)* (': ' ('a'..'z'|'A'..'Z'|RULE_INT|RULE_EGYSTRING)*)? '#';

RULE_DUALSTRING_DOT : '.du';

RULE_DUALSTRING_COMMA : ',du';

RULE_PLURALSTRING_DOT : '.pl';

RULE_PLURALSTRING_COMMA : ',pl';

RULE_SUFFIXSTRING : ('.'|',') ('\uA722'|'j'|'y'|'w'|'n'|'s'|'k'|'t'|'\u1E6F'|'\u0131\u0357'|'\u015B'|'\u0131\u0357\u032F'|'\u00EF'|'u\u032F'|'\u010D'|'\u1E71'|'a'|'\uA723')+;

RULE_EGYSTRING : ('\uA722'|'j'|'y'|'\uA724'|'w'|'b'|'f'|'m'|'n'|'r'|'h'|'\u1E25'|'\u1E2B'|'\u1E96'|'z'|'s'|'\u0161'|'q'|'k'|'g'|'t'|'\u1E6F'|'d'|'\u1E0F'|'\u02BE'|'\u0131\u0357'|'\u015B'|'\u1E33'|'\u0131\u0357\u032F'|'\u00EF'|'u\u032F'|'\u010D'|'\u010D\u0323'|'\u1E6D'|'h\u032D'|'\u1E71'|'a'|'i\u032D'|'\uA723'|'J'|'Y'|'\uA725'|'W'|'B'|'P'|'F'|'M'|'N'|'R'|'L'|'H'|'\u1E24'|'\u1E2A'|'H\u0331'|'Z'|'S'|'\u0160'|'Q'|'K'|'G'|'T'|'\u1E6E'|'D'|'\u1E0E'|'I\u0357'|'\u015A'|'\u1E32'|'\u010C'|'\u010C\u0323'|'\u1E6C'|'H\u032D'|'\u1E70'|'A'|'I'|'\u2C80'..'\u2CFF'|'\uD80C\uDE86'|'\uD80C\uDE87'|'\uD80C\uDF79'|'\uD80C\uDF7A'|'\uD80C\uDE58'|'\uD80C\uDE82'|'p'|'l')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;


