/*
* generated by Xtext
*/
grammar InternalBTS;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.bbaw.bts.corpus.text.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.bbaw.bts.corpus.text.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.bbaw.bts.corpus.text.dsl.services.BTSGrammarAccess;

}

@parser::members {

 	private BTSGrammarAccess grammarAccess;
 	
    public InternalBTSParser(TokenStream input, BTSGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "TextContent";	
   	}
   	
   	@Override
   	protected BTSGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTextContent
entryRuleTextContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextContentRule()); }
	 iv_ruleTextContent=ruleTextContent 
	 { $current=$iv_ruleTextContent.current; } 
	 EOF 
;

// Rule TextContent
ruleTextContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTextContentAccess().getTextContentAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTextContentAccess().getItemsTextItemParserRuleCall_1_0_0()); 
	    }
		lv_items_1_0=ruleTextItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextContentRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_1_0, 
        		"TextItem");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_2=' ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTextContentAccess().getSpaceKeyword_1_1_0_0());
    }

    |this_NEWLINE_3=RULE_NEWLINE
    { 
    newLeafNode(this_NEWLINE_3, grammarAccess.getTextContentAccess().getNEWLINETerminalRuleCall_1_1_0_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTextContentAccess().getItemsTextItemParserRuleCall_1_1_1_0()); 
	    }
		lv_items_4_0=ruleTextItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextContentRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_4_0, 
        		"TextItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleTextItem
entryRuleTextItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextItemRule()); }
	 iv_ruleTextItem=ruleTextItem 
	 { $current=$iv_ruleTextItem.current; } 
	 EOF 
;

// Rule TextItem
ruleTextItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getTextItemAccess().getSentenceParserRuleCall()); 
    }
    this_Sentence_0=ruleSentence
    { 
        $current = $this_Sentence_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleSentence
entryRuleSentence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSentenceRule()); }
	 iv_ruleSentence=ruleSentence 
	 { $current=$iv_ruleSentence.current; } 
	 EOF 
;

// Rule Sentence
ruleSentence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSentenceAccess().getSentenceAction_0(),
            $current);
    }
)	otherlv_1='\u00C2\u00A7' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSentenceAccess().getLatinCapitalLetterAWithCircumflexSectionSignKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getItemsSentenceItemParserRuleCall_2_0_0()); 
	    }
		lv_items_2_0=ruleSentenceItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_2_0, 
        		"SentenceItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=' ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSentenceAccess().getSpaceKeyword_2_1_0());
    }
(this_NEWLINE_4=RULE_NEWLINE
    { 
    newLeafNode(this_NEWLINE_4, grammarAccess.getSentenceAccess().getNEWLINETerminalRuleCall_2_1_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getItemsSentenceItemParserRuleCall_2_1_2_0()); 
	    }
		lv_items_5_0=ruleSentenceItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_5_0, 
        		"SentenceItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6='\u00C2\u00A7' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSentenceAccess().getLatinCapitalLetterAWithCircumflexSectionSignKeyword_3());
    }
)
;





// Entry rule entryRuleSentenceItem
entryRuleSentenceItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSentenceItemRule()); }
	 iv_ruleSentenceItem=ruleSentenceItem 
	 { $current=$iv_ruleSentenceItem.current; } 
	 EOF 
;

// Rule SentenceItem
ruleSentenceItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSentenceItemAccess().getWordParserRuleCall_0()); 
    }
    this_Word_0=ruleWord
    { 
        $current = $this_Word_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenceItemAccess().getAbstractMarkerParserRuleCall_1()); 
    }
    this_AbstractMarker_1=ruleAbstractMarker
    { 
        $current = $this_AbstractMarker_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenceItemAccess().getAmbivalenceParserRuleCall_2()); 
    }
    this_Ambivalence_2=ruleAmbivalence
    { 
        $current = $this_Ambivalence_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAbstractMarker
entryRuleAbstractMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractMarkerRule()); }
	 iv_ruleAbstractMarker=ruleAbstractMarker 
	 { $current=$iv_ruleAbstractMarker.current; } 
	 EOF 
;

// Rule AbstractMarker
ruleAbstractMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractMarkerAccess().getMarkerParserRuleCall_0()); 
    }
    this_Marker_0=ruleMarker
    { 
        $current = $this_Marker_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractMarkerAccess().getVersMarkerParserRuleCall_1()); 
    }
    this_VersMarker_1=ruleVersMarker
    { 
        $current = $this_VersMarker_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAmbivalence
entryRuleAmbivalence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAmbivalenceRule()); }
	 iv_ruleAmbivalence=ruleAmbivalence 
	 { $current=$iv_ruleAmbivalence.current; } 
	 EOF 
;

// Rule Ambivalence
ruleAmbivalence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAmbivalenceAccess().getPercentSignKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAmbivalenceAccess().getCasesCaseParserRuleCall_1_0_0()); 
	    }
		lv_cases_1_0=ruleCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAmbivalenceRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_1_0, 
        		"Case");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='; ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAmbivalenceAccess().getSemicolonSpaceKeyword_1_1_0());
    }
(this_NEWLINE_3=RULE_NEWLINE
    { 
    newLeafNode(this_NEWLINE_3, grammarAccess.getAmbivalenceAccess().getNEWLINETerminalRuleCall_1_1_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAmbivalenceAccess().getCasesCaseParserRuleCall_1_1_2_0()); 
	    }
		lv_cases_4_0=ruleCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAmbivalenceRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_4_0, 
        		"Case");
	        afterParserOrEnumRuleCall();
	    }

)
))+)	otherlv_5='%' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAmbivalenceAccess().getPercentSignKeyword_2());
    }
)
;





// Entry rule entryRuleCase
entryRuleCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaseRule()); }
	 iv_ruleCase=ruleCase 
	 { $current=$iv_ruleCase.current; } 
	 EOF 
;

// Rule Case
ruleCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_CASESTRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getCaseAccess().getNameCASESTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"CASESTRING");
	    }

)
)(this_NEWLINE_1=RULE_NEWLINE
    { 
    newLeafNode(this_NEWLINE_1, grammarAccess.getCaseAccess().getNEWLINETerminalRuleCall_1()); 
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getItemsSentenceItemNoAmbivalenceParserRuleCall_2_0_0()); 
	    }
		lv_items_2_0=ruleSentenceItemNoAmbivalence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_2_0, 
        		"SentenceItemNoAmbivalence");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=' ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCaseAccess().getSpaceKeyword_2_1_0());
    }
(this_NEWLINE_4=RULE_NEWLINE
    { 
    newLeafNode(this_NEWLINE_4, grammarAccess.getCaseAccess().getNEWLINETerminalRuleCall_2_1_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getItemsSentenceItemNoAmbivalenceParserRuleCall_2_1_2_0()); 
	    }
		lv_items_5_0=ruleSentenceItemNoAmbivalence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_5_0, 
        		"SentenceItemNoAmbivalence");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleSentenceItemNoAmbivalence
entryRuleSentenceItemNoAmbivalence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSentenceItemNoAmbivalenceRule()); }
	 iv_ruleSentenceItemNoAmbivalence=ruleSentenceItemNoAmbivalence 
	 { $current=$iv_ruleSentenceItemNoAmbivalence.current; } 
	 EOF 
;

// Rule SentenceItemNoAmbivalence
ruleSentenceItemNoAmbivalence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSentenceItemNoAmbivalenceAccess().getWordParserRuleCall_0()); 
    }
    this_Word_0=ruleWord
    { 
        $current = $this_Word_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenceItemNoAmbivalenceAccess().getAbstractMarkerParserRuleCall_1()); 
    }
    this_AbstractMarker_1=ruleAbstractMarker
    { 
        $current = $this_AbstractMarker_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVersMarker
entryRuleVersMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersMarkerRule()); }
	 iv_ruleVersMarker=ruleVersMarker 
	 { $current=$iv_ruleVersMarker.current; } 
	 EOF 
;

// Rule VersMarker
ruleVersMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVersMarkerAccess().getVersbreakMarkerParserRuleCall_0()); 
    }
    this_VersbreakMarker_0=ruleVersbreakMarker
    { 
        $current = $this_VersbreakMarker_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVersMarkerAccess().getVersFrontierMarkerParserRuleCall_1()); 
    }
    this_VersFrontierMarker_1=ruleVersFrontierMarker
    { 
        $current = $this_VersFrontierMarker_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVersMarkerAccess().getBrokenVersbreakMarkerParserRuleCall_2()); 
    }
    this_BrokenVersbreakMarker_2=ruleBrokenVersbreakMarker
    { 
        $current = $this_BrokenVersbreakMarker_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVersFrontierMarker
entryRuleVersFrontierMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersFrontierMarkerRule()); }
	 iv_ruleVersFrontierMarker=ruleVersFrontierMarker 
	 { $current=$iv_ruleVersFrontierMarker.current; } 
	 EOF 
;

// Rule VersFrontierMarker
ruleVersFrontierMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVersFrontierMarkerAccess().getVersFrontierMarkerAction_0(),
            $current);
    }
)	otherlv_1='\uF0081' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVersFrontierMarkerAccess().getPrivateUseAreaF008DigitOneKeyword_1());
    }
)
;





// Entry rule entryRuleVersbreakMarker
entryRuleVersbreakMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersbreakMarkerRule()); }
	 iv_ruleVersbreakMarker=ruleVersbreakMarker 
	 { $current=$iv_ruleVersbreakMarker.current; } 
	 EOF 
;

// Rule VersbreakMarker
ruleVersbreakMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVersbreakMarkerAccess().getVersbreakMarkerAction_0(),
            $current);
    }
)	otherlv_1='\uF0080' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVersbreakMarkerAccess().getPrivateUseAreaF008DigitZeroKeyword_1());
    }
)
;





// Entry rule entryRuleBrokenVersbreakMarker
entryRuleBrokenVersbreakMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBrokenVersbreakMarkerRule()); }
	 iv_ruleBrokenVersbreakMarker=ruleBrokenVersbreakMarker 
	 { $current=$iv_ruleBrokenVersbreakMarker.current; } 
	 EOF 
;

// Rule BrokenVersbreakMarker
ruleBrokenVersbreakMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBrokenVersbreakMarkerAccess().getBrokenVersbreakMarkerAction_0(),
            $current);
    }
)	otherlv_1='\uDB80\uDC82' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBrokenVersbreakMarkerAccess().getLeadSurrogateDb80TrailSurrogateDc82Keyword_1());
    }
)
;





// Entry rule entryRuleMarker
entryRuleMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMarkerRule()); }
	 iv_ruleMarker=ruleMarker 
	 { $current=$iv_ruleMarker.current; } 
	 EOF 
;

// Rule Marker
ruleMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_type_0_0=RULE_BETWEEN_HASHES
		{
			newLeafNode(lv_type_0_0, grammarAccess.getMarkerAccess().getTypeBETWEEN_HASHESTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMarkerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"BETWEEN_HASHES");
	    }

)
)
;





// Entry rule entryRuleWord
entryRuleWord returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWordRule()); }
	 iv_ruleWord=ruleWord 
	 { $current=$iv_ruleWord.current; } 
	 EOF 
;

// Rule Word
ruleWord returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getWordAccess().getWordAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getWordAccess().getWCharWordPartParserRuleCall_1_0_0()); 
	    }
		lv_wChar_1_0=ruleWordPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWordRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_1_0, 
        		"WordPart");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='-' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWordAccess().getHyphenMinusKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWordAccess().getWCharWordPartParserRuleCall_1_1_1_0()); 
	    }
		lv_wChar_3_0=ruleWordPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWordRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_3_0, 
        		"WordPart");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleWordPart
entryRuleWordPart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWordPartRule()); }
	 iv_ruleWordPart=ruleWordPart 
	 { $current=$iv_ruleWordPart.current; } 
	 EOF 
;

// Rule WordPart
ruleWordPart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWordPartAccess().getEqualsSignKeyword_0());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getWordPartAccess().getWCharWordMiddleParserRuleCall_1_0_0()); 
	    }
		lv_wChar_1_0=ruleWordMiddle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWordPartRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_1_0, 
        		"WordMiddle");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWordPartAccess().getWCharWordMiddleParserRuleCall_1_1_0()); 
	    }
		lv_wChar_2_0=ruleWordMiddle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWordPartRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"WordMiddle");
	        afterParserOrEnumRuleCall();
	    }

)
)*))
;





// Entry rule entryRuleWordMiddle
entryRuleWordMiddle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWordMiddleRule()); }
	 iv_ruleWordMiddle=ruleWordMiddle 
	 { $current=$iv_ruleWordMiddle.current; } 
	 EOF 
;

// Rule WordMiddle
ruleWordMiddle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getWordMiddleAccess().getBracketsParserRuleCall_0()); 
    }
    this_Brackets_0=ruleBrackets
    { 
        $current = $this_Brackets_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWordMiddleAccess().getCharsParserRuleCall_1()); 
    }
    this_Chars_1=ruleChars
    { 
        $current = $this_Chars_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleChars
entryRuleChars returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharsRule()); }
	 iv_ruleChars=ruleChars 
	 { $current=$iv_ruleChars.current; } 
	 EOF 
;

// Rule Chars
ruleChars returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_EGYSTRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getCharsAccess().getNameEGYSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCharsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"EGYSTRING");
	    }

)
)
;





// Entry rule entryRuleBrackets
entryRuleBrackets returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBracketsRule()); }
	 iv_ruleBrackets=ruleBrackets 
	 { $current=$iv_ruleBrackets.current; } 
	 EOF 
;

// Rule Brackets
ruleBrackets returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getRasurParserRuleCall_0()); 
    }
    this_Rasur_0=ruleRasur
    { 
        $current = $this_Rasur_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getAncientExpandedParserRuleCall_1()); 
    }
    this_AncientExpanded_1=ruleAncientExpanded
    { 
        $current = $this_AncientExpanded_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getRestorationOverRasurParserRuleCall_2()); 
    }
    this_RestorationOverRasur_2=ruleRestorationOverRasur
    { 
        $current = $this_RestorationOverRasur_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getExpandedParserRuleCall_3()); 
    }
    this_Expanded_3=ruleExpanded
    { 
        $current = $this_Expanded_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getDisputableReadingParserRuleCall_4()); 
    }
    this_DisputableReading_4=ruleDisputableReading
    { 
        $current = $this_DisputableReading_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getEmendationParserRuleCall_5()); 
    }
    this_Emendation_5=ruleEmendation
    { 
        $current = $this_Emendation_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getLacunaParserRuleCall_6()); 
    }
    this_Lacuna_6=ruleLacuna
    { 
        $current = $this_Lacuna_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getDeletionParserRuleCall_7()); 
    }
    this_Deletion_7=ruleDeletion
    { 
        $current = $this_Deletion_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getExpandedColumnParserRuleCall_8()); 
    }
    this_ExpandedColumn_8=ruleExpandedColumn
    { 
        $current = $this_ExpandedColumn_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getPartialDestructionParserRuleCall_9()); 
    }
    this_PartialDestruction_9=rulePartialDestruction
    { 
        $current = $this_PartialDestruction_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getDestructionParserRuleCall_10()); 
    }
    this_Destruction_10=ruleDestruction
    { 
        $current = $this_Destruction_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpanded
entryRuleExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpandedRule()); }
	 iv_ruleExpanded=ruleExpanded 
	 { $current=$iv_ruleExpanded.current; } 
	 EOF 
;

// Rule Expanded
ruleExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpandedAccess().getExpandedAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpandedAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpandedAccess().getWCharNoExpandedParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoExpanded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpandedRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoExpanded");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpandedAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleNoExpanded
entryRuleNoExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoExpandedRule()); }
	 iv_ruleNoExpanded=ruleNoExpanded 
	 { $current=$iv_ruleNoExpanded.current; } 
	 EOF 
;

// Rule NoExpanded
ruleNoExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getNoExpandedAccess().getCharsParserRuleCall()); 
    }
    this_Chars_0=ruleChars
    { 
        $current = $this_Chars_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleEmendation
entryRuleEmendation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmendationRule()); }
	 iv_ruleEmendation=ruleEmendation 
	 { $current=$iv_ruleEmendation.current; } 
	 EOF 
;

// Rule Emendation
ruleEmendation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEmendationAccess().getEmendationAction_0(),
            $current);
    }
)	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEmendationAccess().getLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmendationAccess().getWCharNoEmendationParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoEmendation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmendationRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoEmendation");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEmendationAccess().getGreaterThanSignKeyword_3());
    }
)
;





// Entry rule entryRuleNoEmendation
entryRuleNoEmendation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoEmendationRule()); }
	 iv_ruleNoEmendation=ruleNoEmendation 
	 { $current=$iv_ruleNoEmendation.current; } 
	 EOF 
;

// Rule NoEmendation
ruleNoEmendation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoEmendationAccess().getCharsParserRuleCall_0()); 
    }
    this_Chars_0=ruleChars
    { 
        $current = $this_Chars_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoEmendationAccess().getExpandedParserRuleCall_1()); 
    }
    this_Expanded_1=ruleExpanded
    { 
        $current = $this_Expanded_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDisputableReading
entryRuleDisputableReading returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDisputableReadingRule()); }
	 iv_ruleDisputableReading=ruleDisputableReading 
	 { $current=$iv_ruleDisputableReading.current; } 
	 EOF 
;

// Rule DisputableReading
ruleDisputableReading returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDisputableReadingAccess().getDisputableReadingAction_0(),
            $current);
    }
)	otherlv_1='\u2E2E' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDisputableReadingAccess().getReversedQuestionMarkKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDisputableReadingAccess().getWCharNoDisputableReadingParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoDisputableReading		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDisputableReadingRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoDisputableReading");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='?' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDisputableReadingAccess().getQuestionMarkKeyword_3());
    }
)
;





// Entry rule entryRuleNoDisputableReading
entryRuleNoDisputableReading returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoDisputableReadingRule()); }
	 iv_ruleNoDisputableReading=ruleNoDisputableReading 
	 { $current=$iv_ruleNoDisputableReading.current; } 
	 EOF 
;

// Rule NoDisputableReading
ruleNoDisputableReading returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoDisputableReadingAccess().getExpandedParserRuleCall_0()); 
    }
    this_Expanded_0=ruleExpanded
    { 
        $current = $this_Expanded_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoDisputableReadingAccess().getCharsParserRuleCall_1()); 
    }
    this_Chars_1=ruleChars
    { 
        $current = $this_Chars_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLacuna
entryRuleLacuna returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLacunaRule()); }
	 iv_ruleLacuna=ruleLacuna 
	 { $current=$iv_ruleLacuna.current; } 
	 EOF 
;

// Rule Lacuna
ruleLacuna returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLacunaAccess().getLacunaAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLacunaAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLacunaAccess().getWCharNoLacunaParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoLacuna		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLacunaRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoLacuna");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLacunaAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleNoLacuna
entryRuleNoLacuna returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoLacunaRule()); }
	 iv_ruleNoLacuna=ruleNoLacuna 
	 { $current=$iv_ruleNoLacuna.current; } 
	 EOF 
;

// Rule NoLacuna
ruleNoLacuna returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoLacunaAccess().getExpandedParserRuleCall_0()); 
    }
    this_Expanded_0=ruleExpanded
    { 
        $current = $this_Expanded_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoLacunaAccess().getCharsParserRuleCall_1()); 
    }
    this_Chars_1=ruleChars
    { 
        $current = $this_Chars_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDeletion
entryRuleDeletion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeletionRule()); }
	 iv_ruleDeletion=ruleDeletion 
	 { $current=$iv_ruleDeletion.current; } 
	 EOF 
;

// Rule Deletion
ruleDeletion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeletionAccess().getDeletionAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeletionAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeletionAccess().getWCharNoDeletionParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoDeletion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeletionRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoDeletion");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeletionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleNoDeletion
entryRuleNoDeletion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoDeletionRule()); }
	 iv_ruleNoDeletion=ruleNoDeletion 
	 { $current=$iv_ruleNoDeletion.current; } 
	 EOF 
;

// Rule NoDeletion
ruleNoDeletion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoDeletionAccess().getCharsParserRuleCall_0()); 
    }
    this_Chars_0=ruleChars
    { 
        $current = $this_Chars_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoDeletionAccess().getPartialDestructionParserRuleCall_1()); 
    }
    this_PartialDestruction_1=rulePartialDestruction
    { 
        $current = $this_PartialDestruction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoDeletionAccess().getExpandedParserRuleCall_2()); 
    }
    this_Expanded_2=ruleExpanded
    { 
        $current = $this_Expanded_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpandedColumn
entryRuleExpandedColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpandedColumnRule()); }
	 iv_ruleExpandedColumn=ruleExpandedColumn 
	 { $current=$iv_ruleExpandedColumn.current; } 
	 EOF 
;

// Rule ExpandedColumn
ruleExpandedColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpandedColumnAccess().getExpandedColumnAction_0(),
            $current);
    }
)	otherlv_1='<<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpandedColumnAccess().getLessThanSignLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpandedColumnAccess().getWCharNoExpandedColumnParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoExpandedColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpandedColumnRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoExpandedColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='>>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpandedColumnAccess().getGreaterThanSignGreaterThanSignKeyword_3());
    }
)
;





// Entry rule entryRuleNoExpandedColumn
entryRuleNoExpandedColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoExpandedColumnRule()); }
	 iv_ruleNoExpandedColumn=ruleNoExpandedColumn 
	 { $current=$iv_ruleNoExpandedColumn.current; } 
	 EOF 
;

// Rule NoExpandedColumn
ruleNoExpandedColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoExpandedColumnAccess().getCharsParserRuleCall_0()); 
    }
    this_Chars_0=ruleChars
    { 
        $current = $this_Chars_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoExpandedColumnAccess().getExpandedParserRuleCall_1()); 
    }
    this_Expanded_1=ruleExpanded
    { 
        $current = $this_Expanded_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRasur
entryRuleRasur returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRasurRule()); }
	 iv_ruleRasur=ruleRasur 
	 { $current=$iv_ruleRasur.current; } 
	 EOF 
;

// Rule Rasur
ruleRasur returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRasurAccess().getRasurAction_0(),
            $current);
    }
)	otherlv_1='{{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRasurAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRasurAccess().getWCharNoRasurParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoRasur		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRasurRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoRasur");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRasurAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleNoRasur
entryRuleNoRasur returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoRasurRule()); }
	 iv_ruleNoRasur=ruleNoRasur 
	 { $current=$iv_ruleNoRasur.current; } 
	 EOF 
;

// Rule NoRasur
ruleNoRasur returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoRasurAccess().getCharsParserRuleCall_0()); 
    }
    this_Chars_0=ruleChars
    { 
        $current = $this_Chars_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoRasurAccess().getExpandedParserRuleCall_1()); 
    }
    this_Expanded_1=ruleExpanded
    { 
        $current = $this_Expanded_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAncientExpanded
entryRuleAncientExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAncientExpandedRule()); }
	 iv_ruleAncientExpanded=ruleAncientExpanded 
	 { $current=$iv_ruleAncientExpanded.current; } 
	 EOF 
;

// Rule AncientExpanded
ruleAncientExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAncientExpandedAccess().getAncientExpandedAction_0(),
            $current);
    }
)	otherlv_1='((' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAncientExpandedAccess().getLeftParenthesisLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAncientExpandedAccess().getWCharNoAncientExpandedParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoAncientExpanded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAncientExpandedRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoAncientExpanded");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='))' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAncientExpandedAccess().getRightParenthesisRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleNoAncientExpanded
entryRuleNoAncientExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoAncientExpandedRule()); }
	 iv_ruleNoAncientExpanded=ruleNoAncientExpanded 
	 { $current=$iv_ruleNoAncientExpanded.current; } 
	 EOF 
;

// Rule NoAncientExpanded
ruleNoAncientExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoAncientExpandedAccess().getCharsParserRuleCall_0()); 
    }
    this_Chars_0=ruleChars
    { 
        $current = $this_Chars_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoAncientExpandedAccess().getExpandedParserRuleCall_1()); 
    }
    this_Expanded_1=ruleExpanded
    { 
        $current = $this_Expanded_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRestorationOverRasur
entryRuleRestorationOverRasur returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRestorationOverRasurRule()); }
	 iv_ruleRestorationOverRasur=ruleRestorationOverRasur 
	 { $current=$iv_ruleRestorationOverRasur.current; } 
	 EOF 
;

// Rule RestorationOverRasur
ruleRestorationOverRasur returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRestorationOverRasurAccess().getRestorationOverRasurAction_0(),
            $current);
    }
)	otherlv_1='[[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRestorationOverRasurAccess().getLeftSquareBracketLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRestorationOverRasurAccess().getWCharNoRestorationOverRasurParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoRestorationOverRasur		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestorationOverRasurRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoRestorationOverRasur");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3=']]' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRestorationOverRasurAccess().getRightSquareBracketRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleNoRestorationOverRasur
entryRuleNoRestorationOverRasur returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoRestorationOverRasurRule()); }
	 iv_ruleNoRestorationOverRasur=ruleNoRestorationOverRasur 
	 { $current=$iv_ruleNoRestorationOverRasur.current; } 
	 EOF 
;

// Rule NoRestorationOverRasur
ruleNoRestorationOverRasur returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoRestorationOverRasurAccess().getCharsParserRuleCall_0()); 
    }
    this_Chars_0=ruleChars
    { 
        $current = $this_Chars_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoRestorationOverRasurAccess().getExpandedParserRuleCall_1()); 
    }
    this_Expanded_1=ruleExpanded
    { 
        $current = $this_Expanded_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePartialDestruction
entryRulePartialDestruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartialDestructionRule()); }
	 iv_rulePartialDestruction=rulePartialDestruction 
	 { $current=$iv_rulePartialDestruction.current; } 
	 EOF 
;

// Rule PartialDestruction
rulePartialDestruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPartialDestructionAccess().getPartialDestructionAction_0(),
            $current);
    }
)	otherlv_1='\u2E22' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPartialDestructionAccess().getTopLeftHalfBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPartialDestructionAccess().getWCharNoPartialDestructionParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoPartialDestruction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartialDestructionRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoPartialDestruction");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='\u2E23' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartialDestructionAccess().getTopRightHalfBracketKeyword_3());
    }
)
;





// Entry rule entryRuleNoPartialDestruction
entryRuleNoPartialDestruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoPartialDestructionRule()); }
	 iv_ruleNoPartialDestruction=ruleNoPartialDestruction 
	 { $current=$iv_ruleNoPartialDestruction.current; } 
	 EOF 
;

// Rule NoPartialDestruction
ruleNoPartialDestruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoPartialDestructionAccess().getCharsParserRuleCall_0()); 
    }
    this_Chars_0=ruleChars
    { 
        $current = $this_Chars_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoPartialDestructionAccess().getDeletionParserRuleCall_1()); 
    }
    this_Deletion_1=ruleDeletion
    { 
        $current = $this_Deletion_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoPartialDestructionAccess().getExpandedParserRuleCall_2()); 
    }
    this_Expanded_2=ruleExpanded
    { 
        $current = $this_Expanded_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDestruction
entryRuleDestruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDestructionRule()); }
	 iv_ruleDestruction=ruleDestruction 
	 { $current=$iv_ruleDestruction.current; } 
	 EOF 
;

// Rule Destruction
ruleDestruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDestructionAccess().getDestructionAction_0(),
            $current);
    }
)	otherlv_1='\u2013' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDestructionAccess().getEnDashKeyword_1());
    }
(
(
		lv_comment_2_0=RULE_COMMNENT_EGYSTRING
		{
			newLeafNode(lv_comment_2_0, grammarAccess.getDestructionAccess().getCommentCOMMNENT_EGYSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDestructionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_2_0, 
        		"COMMNENT_EGYSTRING");
	    }

)
)	otherlv_3='\u2013' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDestructionAccess().getEnDashKeyword_3());
    }
)
;





RULE_WS : (' '|'\t');

RULE_NEWLINE : ('\r'|'\n'|'\r\n'|'\t');

RULE_CASESTRING : 'case ' ~(':')+ ': ';

RULE_BETWEEN_HASHES : '#' ~('#')* '#';

RULE_COMMNENT_EGYSTRING : ~('\u2013')*;

RULE_EGYSTRING : ('\uA722'|'\uA723' '\u02BE'|'\uA725'|'\uA724'|'\u00EA\u0153\u00A3'|'j'|'y'|'w'|'b'|'f'|'m'|'n'|'r'|'h'|'\u00E1\u00B8\u00A5'|'\u00E1\u00B8\u00AB'|'\u00E1\u00BA\u2013'|'H'|'\u00E1\u00B8\u00A4'|'\u00E1\u00B8\u00AA'|'H\u00CC\u00B1'|'H\u00CC\u00AD'|'z'|'s'|'\u00C5\u00A1'|'\u00C5\u203A'|'S'|'\u00C5\u00A0'|'\u00C5\u0161'|'q'|'k'|'g'|'t'|'\u00E1\u00B9\u00AF'|'\u00E1\u00B9\u00AD'|'\u00E1\u00B9\u00B1'|'T'|'\u00E1\u00B9\u00AE'|'\u00E1\u00B9\u00AC'|'\u00E1\u00B9\u00B0'|'d'|'\u00E1\u00B8\uFFFD'|'\u00E1\u00B8\u017D'|'h\u00CC\u00AD'|'i\u00CC\u00AF'|'\u00C4\u00B1\u00CD\u2014'|'\u00C4\u00B1\u00CD\u2014\u00CC\u00AF'|'\u00C3\u00AF'|'i\u00CC\u00AD'|'I\u00CD\u2014'|'I'|'I\u032F'|'\u00CF'|'\u00E1\u00B8\u00B3'|'\u00E1\u00B8\u00B2'|'u'|'u\u00CC\u00AF'|'U'|'U\u032F'|'\u00C4\uFFFD'|'\u00C4\uFFFD\u00CC\u00A3'|'\u00C4\u0152'|'\u00C4\u0152\u00CC\u00A3'|'a'|'J'|'Y'|'W'|'B'|'P'|'F'|'M'|'N'|'R'|'L'|'Z'|'Q'|'K'|'G'|'D'|'A'|'\u2C80'..'\u2CFF'|'\uD80C\uDE86'|'\uD80C\uDE87'|'\uD80C\uDF79'|'\uD80C\uDF7A'|'\u13379'|'\u1337A'|'\uD80C\uDE58'|'\uD80C\uDE82'|'p'|'l'|':'|'='|'\u2261'|','|'.'|'~'|'\u22EE'|'_'|'\u205D'|'0'..'9'|'\u00C3\u2022'|'\u00C3\u00A3'|'\u00C3\u017E'|'!'|'\u0152'|'\u0153'|'\u0178'|'\u00C6')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;


