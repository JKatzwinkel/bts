/*
* generated by Xtext
*/
grammar InternalBTS;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.bbaw.bts.corpus.text.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.bbaw.bts.corpus.text.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.bbaw.bts.corpus.text.dsl.services.BTSGrammarAccess;

}

@parser::members {

 	private BTSGrammarAccess grammarAccess;
 	
    public InternalBTSParser(TokenStream input, BTSGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "BTSTextContent";	
   	}
   	
   	@Override
   	protected BTSGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleBTSTextContent
entryRuleBTSTextContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBTSTextContentRule()); }
	 iv_ruleBTSTextContent=ruleBTSTextContent 
	 { $current=$iv_ruleBTSTextContent.current; } 
	 EOF 
;

// Rule BTSTextContent
ruleBTSTextContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBTSTextContentAccess().getBTSTextContentAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getBTSTextContentAccess().getTextItemsBTSTextItemsParserRuleCall_1_0_0()); 
	    }
		lv_textItems_1_0=ruleBTSTextItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSTextContentRule());
	        }
       		add(
       			$current, 
       			"textItems",
        		lv_textItems_1_0, 
        		"BTSTextItems");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=' ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBTSTextContentAccess().getSpaceKeyword_1_1_0());
    }

    |(	otherlv_3='\n' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBTSTextContentAccess().getControl000aKeyword_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSTextContentAccess().getTextItemsBTSTextItemsParserRuleCall_1_1_1_1_0()); 
	    }
		lv_textItems_4_0=ruleBTSTextItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSTextContentRule());
	        }
       		add(
       			$current, 
       			"textItems",
        		lv_textItems_4_0, 
        		"BTSTextItems");
	        afterParserOrEnumRuleCall();
	    }

)
)))*(	otherlv_5='\n' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBTSTextContentAccess().getControl000aKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSTextContentAccess().getTextItemsBTSTextItemsParserRuleCall_1_2_1_0()); 
	    }
		lv_textItems_6_0=ruleBTSTextItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSTextContentRule());
	        }
       		add(
       			$current, 
       			"textItems",
        		lv_textItems_6_0, 
        		"BTSTextItems");
	        afterParserOrEnumRuleCall();
	    }

)
))*)*)
;





// Entry rule entryRuleBTSSentenceItem
entryRuleBTSSentenceItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBTSSentenceItemRule()); }
	 iv_ruleBTSSentenceItem=ruleBTSSentenceItem 
	 { $current=$iv_ruleBTSSentenceItem.current; } 
	 EOF 
;

// Rule BTSSentenceItem
ruleBTSSentenceItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBTSSentenceItemAccess().getBTSWordParserRuleCall_0()); 
    }
    this_BTSWord_0=ruleBTSWord
    { 
        $current = $this_BTSWord_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBTSSentenceItemAccess().getBTSMarkerParserRuleCall_1()); 
    }
    this_BTSMarker_1=ruleBTSMarker
    { 
        $current = $this_BTSMarker_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBTSSentenceItemAccess().getBTSAmbivalenceParserRuleCall_2()); 
    }
    this_BTSAmbivalence_2=ruleBTSAmbivalence
    { 
        $current = $this_BTSAmbivalence_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBTSAmbivalenceItem
entryRuleBTSAmbivalenceItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBTSAmbivalenceItemRule()); }
	 iv_ruleBTSAmbivalenceItem=ruleBTSAmbivalenceItem 
	 { $current=$iv_ruleBTSAmbivalenceItem.current; } 
	 EOF 
;

// Rule BTSAmbivalenceItem
ruleBTSAmbivalenceItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBTSAmbivalenceItemAccess().getBTSWordParserRuleCall_0()); 
    }
    this_BTSWord_0=ruleBTSWord
    { 
        $current = $this_BTSWord_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBTSAmbivalenceItemAccess().getBTSMarkerParserRuleCall_1()); 
    }
    this_BTSMarker_1=ruleBTSMarker
    { 
        $current = $this_BTSMarker_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBTSTextItems
entryRuleBTSTextItems returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBTSTextItemsRule()); }
	 iv_ruleBTSTextItems=ruleBTSTextItems 
	 { $current=$iv_ruleBTSTextItems.current; } 
	 EOF 
;

// Rule BTSTextItems
ruleBTSTextItems returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBTSTextItemsAccess().getBTSSenctenceParserRuleCall_0()); 
    }
    this_BTSSenctence_0=ruleBTSSenctence
    { 
        $current = $this_BTSSenctence_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBTSTextItemsAccess().getBTSMarkerParserRuleCall_1()); 
    }
    this_BTSMarker_1=ruleBTSMarker
    { 
        $current = $this_BTSMarker_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBTSTextItemsAccess().getBTSAmbivalenceParserRuleCall_2()); 
    }
    this_BTSAmbivalence_2=ruleBTSAmbivalence
    { 
        $current = $this_BTSAmbivalence_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleBTSSenctence
entryRuleBTSSenctence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBTSSenctenceRule()); }
	 iv_ruleBTSSenctence=ruleBTSSenctence 
	 { $current=$iv_ruleBTSSenctence.current; } 
	 EOF 
;

// Rule BTSSenctence
ruleBTSSenctence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBTSSenctenceAccess().getBTSSenctenceAction_0(),
            $current);
    }
)	otherlv_1='>>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBTSSenctenceAccess().getGreaterThanSignGreaterThanSignKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getBTSSenctenceAccess().getSentenceItemsBTSSentenceItemParserRuleCall_2_0_0()); 
	    }
		lv_sentenceItems_2_0=ruleBTSSentenceItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSSenctenceRule());
	        }
       		add(
       			$current, 
       			"sentenceItems",
        		lv_sentenceItems_2_0, 
        		"BTSSentenceItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=' ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBTSSenctenceAccess().getSpaceKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSSenctenceAccess().getSentenceItemsBTSSentenceItemParserRuleCall_2_1_1_0()); 
	    }
		lv_sentenceItems_4_0=ruleBTSSentenceItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSSenctenceRule());
	        }
       		add(
       			$current, 
       			"sentenceItems",
        		lv_sentenceItems_4_0, 
        		"BTSSentenceItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='<<' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBTSSenctenceAccess().getLessThanSignLessThanSignKeyword_3());
    }
)
;





// Entry rule entryRuleBTSWord
entryRuleBTSWord returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBTSWordRule()); }
	 iv_ruleBTSWord=ruleBTSWord 
	 { $current=$iv_ruleBTSWord.current; } 
	 EOF 
;

// Rule BTSWord
ruleBTSWord returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBTSWordAccess().getBTSWordAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSWordAccess().getWCharEStringParserRuleCall_1_0()); 
	    }
		lv_wChar_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSWordRule());
	        }
       		set(
       			$current, 
       			"wChar",
        		lv_wChar_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBTSMarker
entryRuleBTSMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBTSMarkerRule()); }
	 iv_ruleBTSMarker=ruleBTSMarker 
	 { $current=$iv_ruleBTSMarker.current; } 
	 EOF 
;

// Rule BTSMarker
ruleBTSMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBTSMarkerAccess().getBTSMarkerAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBTSMarkerAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSMarkerAccess().getValueEStringParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSMarkerRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBTSMarkerAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleBTSAmbivalence
entryRuleBTSAmbivalence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBTSAmbivalenceRule()); }
	 iv_ruleBTSAmbivalence=ruleBTSAmbivalence 
	 { $current=$iv_ruleBTSAmbivalence.current; } 
	 EOF 
;

// Rule BTSAmbivalence
ruleBTSAmbivalence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBTSAmbivalenceAccess().getBTSAmbivalenceAction_0(),
            $current);
    }
)	otherlv_1='BTSAmbivalence' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBTSAmbivalenceAccess().getBTSAmbivalenceKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBTSAmbivalenceAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='state' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBTSAmbivalenceAccess().getStateKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().getStateEStringParserRuleCall_3_1_0()); 
	    }
		lv_state_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		set(
       			$current, 
       			"state",
        		lv_state_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='revisionState' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBTSAmbivalenceAccess().getRevisionStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().getRevisionStateEStringParserRuleCall_4_1_0()); 
	    }
		lv_revisionState_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		set(
       			$current, 
       			"revisionState",
        		lv_revisionState_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='visibility' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBTSAmbivalenceAccess().getVisibilityKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().getVisibilityEStringParserRuleCall_5_1_0()); 
	    }
		lv_visibility_8_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_8_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='sortKey' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBTSAmbivalenceAccess().getSortKeyKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().getSortKeyEIntParserRuleCall_6_1_0()); 
	    }
		lv_sortKey_10_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		set(
       			$current, 
       			"sortKey",
        		lv_sortKey_10_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='type' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBTSAmbivalenceAccess().getTypeKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().getTypeEStringParserRuleCall_7_1_0()); 
	    }
		lv_type_12_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_12_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_13='subtype' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getBTSAmbivalenceAccess().getSubtypeKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().getSubtypeEStringParserRuleCall_8_1_0()); 
	    }
		lv_subtype_14_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		set(
       			$current, 
       			"subtype",
        		lv_subtype_14_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_15='code' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getBTSAmbivalenceAccess().getCodeKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().getCodeEStringParserRuleCall_9_1_0()); 
	    }
		lv_code_16_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		set(
       			$current, 
       			"code",
        		lv_code_16_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_17='_id' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getBTSAmbivalenceAccess().get_idKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().get_idEStringParserRuleCall_10_1_0()); 
	    }
		lv__id_18_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		set(
       			$current, 
       			"_id",
        		lv__id_18_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_19='comment' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getBTSAmbivalenceAccess().getCommentKeyword_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().getCommentEStringParserRuleCall_11_1_0()); 
	    }
		lv_comment_20_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_20_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_21='parentId' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getBTSAmbivalenceAccess().getParentIdKeyword_12_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().getParentIdEStringParserRuleCall_12_1_0()); 
	    }
		lv_parentId_22_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		set(
       			$current, 
       			"parentId",
        		lv_parentId_22_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_23='cases' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getBTSAmbivalenceAccess().getCasesKeyword_13_0());
    }
	otherlv_24='{' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getBTSAmbivalenceAccess().getLeftCurlyBracketKeyword_13_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().getCasesBTSLemmaCaseParserRuleCall_13_2_0()); 
	    }
		lv_cases_25_0=ruleBTSLemmaCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_25_0, 
        		"BTSLemmaCase");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_26=',' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getBTSAmbivalenceAccess().getCommaKeyword_13_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSAmbivalenceAccess().getCasesBTSLemmaCaseParserRuleCall_13_3_1_0()); 
	    }
		lv_cases_27_0=ruleBTSLemmaCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSAmbivalenceRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_27_0, 
        		"BTSLemmaCase");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_28='}' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getBTSAmbivalenceAccess().getRightCurlyBracketKeyword_13_4());
    }
)?	otherlv_29='}' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getBTSAmbivalenceAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleBTSLemmaCase
entryRuleBTSLemmaCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBTSLemmaCaseRule()); }
	 iv_ruleBTSLemmaCase=ruleBTSLemmaCase 
	 { $current=$iv_ruleBTSLemmaCase.current; } 
	 EOF 
;

// Rule BTSLemmaCase
ruleBTSLemmaCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBTSLemmaCaseAccess().getBTSLemmaCaseAction_0(),
            $current);
    }
)	otherlv_1='BTSLemmaCase' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBTSLemmaCaseAccess().getBTSLemmaCaseKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBTSLemmaCaseAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='state' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBTSLemmaCaseAccess().getStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getStateEStringParserRuleCall_4_1_0()); 
	    }
		lv_state_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		set(
       			$current, 
       			"state",
        		lv_state_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='revisionState' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBTSLemmaCaseAccess().getRevisionStateKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getRevisionStateEStringParserRuleCall_5_1_0()); 
	    }
		lv_revisionState_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		set(
       			$current, 
       			"revisionState",
        		lv_revisionState_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='visibility' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBTSLemmaCaseAccess().getVisibilityKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getVisibilityEStringParserRuleCall_6_1_0()); 
	    }
		lv_visibility_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='sortKey' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBTSLemmaCaseAccess().getSortKeyKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getSortKeyEIntParserRuleCall_7_1_0()); 
	    }
		lv_sortKey_11_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		set(
       			$current, 
       			"sortKey",
        		lv_sortKey_11_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_12='type' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBTSLemmaCaseAccess().getTypeKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getTypeEStringParserRuleCall_8_1_0()); 
	    }
		lv_type_13_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_13_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='subtype' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getBTSLemmaCaseAccess().getSubtypeKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getSubtypeEStringParserRuleCall_9_1_0()); 
	    }
		lv_subtype_15_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		set(
       			$current, 
       			"subtype",
        		lv_subtype_15_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_16='code' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getBTSLemmaCaseAccess().getCodeKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getCodeEStringParserRuleCall_10_1_0()); 
	    }
		lv_code_17_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		set(
       			$current, 
       			"code",
        		lv_code_17_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_18='_id' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getBTSLemmaCaseAccess().get_idKeyword_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().get_idEStringParserRuleCall_11_1_0()); 
	    }
		lv__id_19_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		set(
       			$current, 
       			"_id",
        		lv__id_19_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_20='comment' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getBTSLemmaCaseAccess().getCommentKeyword_12_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getCommentEStringParserRuleCall_12_1_0()); 
	    }
		lv_comment_21_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_21_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_22='parentId' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getBTSLemmaCaseAccess().getParentIdKeyword_13_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getParentIdEStringParserRuleCall_13_1_0()); 
	    }
		lv_parentId_23_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		set(
       			$current, 
       			"parentId",
        		lv_parentId_23_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_24='scenario' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getBTSLemmaCaseAccess().getScenarioKeyword_14_0());
    }
	otherlv_25='{' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getBTSLemmaCaseAccess().getLeftCurlyBracketKeyword_14_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getScenarioBTSAmbivalenceItemParserRuleCall_14_2_0()); 
	    }
		lv_scenario_26_0=ruleBTSAmbivalenceItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		add(
       			$current, 
       			"scenario",
        		lv_scenario_26_0, 
        		"BTSAmbivalenceItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_27=',' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getBTSLemmaCaseAccess().getCommaKeyword_14_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBTSLemmaCaseAccess().getScenarioBTSAmbivalenceItemParserRuleCall_14_3_1_0()); 
	    }
		lv_scenario_28_0=ruleBTSAmbivalenceItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBTSLemmaCaseRule());
	        }
       		add(
       			$current, 
       			"scenario",
        		lv_scenario_28_0, 
        		"BTSAmbivalenceItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_29='}' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getBTSLemmaCaseAccess().getRightCurlyBracketKeyword_14_4());
    }
)?	otherlv_30='}' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getBTSLemmaCaseAccess().getRightCurlyBracketKeyword_15());
    }
)
;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;









RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


