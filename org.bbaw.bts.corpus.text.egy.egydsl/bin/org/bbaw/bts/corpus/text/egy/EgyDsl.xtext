grammar org.bbaw.bts.corpus.text.egy.EgyDsl
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate egyDsl "http://www.bbaw.org/bts/corpus/text/egy/EgyDsl"


    
    
TextContent:
	{TextContent}
	(items+=TextItem ((' ' | NEWLINE)?  (items+=TextItem))*);


TextItem:
	Sentence;

// sentence	
Sentence:
	{Sentence}
	'§' (items+=SentenceItem (' ' (NEWLINE)? items+=SentenceItem)*)? '§';

SentenceItem:
	 Word | AbstractMarker |  Ambivalence
;

AbstractMarker:
	Marker | 
	VersMarker |
	DestructionMarker
;

terminal NEWLINE returns ecore::EString :
// New line on DOS or Unix 
    ('\r'|'\n'|'\t')+;

Ambivalence:
	'%' (cases+=Case ('| ' (NEWLINE)? cases+=Case)+) '%'
;

Case:
	name=CASESTRING (NEWLINE)? (items+=SentenceItemNoAmbivalence (' ' (NEWLINE)? items+=SentenceItemNoAmbivalence)*) 
;

terminal CASESTRING returns ecore::EString:
	'case ' (!(':'))+ ': '
;

SentenceItemNoAmbivalence:
	Word | AbstractMarker
;

VersMarker:
	VersbreakMarker | VersFrontierMarker |BrokenVersbreakMarker 
	| MissingVersMarker | DestroyedVersMarker | DeletedVersMarker | DisputableVersMarker
	| RestorationOverRasurMarker | AncientExpandedMarker | RasurMarker
;

DisputableVersMarker:
{DisputableVersMarker}
	'\u2E2E\uDB80\uDC80?'//'@v'
;

DeletedVersMarker:
{DeletedVersMarker}
	'{\uDB80\uDC80}'//'@v'
;

DestroyedVersMarker:
	{DestroyedVersMarker}
	'[\uDB80\uDC80]'//'@v'
;

MissingVersMarker:
	{MissingVersMarker}
	'\u2329\uDB80\uDC80\u232A'//'@v'
;

RestorationOverRasurMarker:
	{RestorationOverRasurMarker}
	'[[\uDB80\uDC80]]'//'@v'
;

AncientExpandedMarker:
	{AncientExpandedMarker}
	'((\uDB80\uDC80))'//'@v'
;

RasurMarker:
	{AncientExpandedMarker}
	'{{\uDB80\uDC80}}'//'@v'
;

VersFrontierMarker:
	{VersFrontierMarker}
//	'\uF0081'
	'\uDB80\uDC81'//'@mv'
;

VersbreakMarker:
	{VersbreakMarker}
//	'\uF0080'
	'\uDB80\uDC80'//'@v'
;

BrokenVersbreakMarker:
	{BrokenVersbreakMarker}
	'\uDB80\uDC82'//'@v'
;

Marker:
	type = BETWEEN_HASHES
;

terminal BETWEEN_HASHES  returns ecore::EString:
	'#' (!'#')+ '#'
;

DestructionMarker:
	type=BETWEEN_MINUS
;
terminal BETWEEN_MINUS  returns ecore::EString:
	'--' (!'-')+ '--'
;


// word
Word:
	{Word}
	
	( wChar+=WordPart+)	//('-') (wChar+=WordPart)*
;

WordPart:
	('=')? ( wChar= WordMiddle )// (wChar+=WordMiddle)*(wChar+=WordEnding)? (wChar+=WordEnding)?)	
;


WordMiddle:
//	{WordMiddle}
	Brackets | Chars | Interfix
;

// Chars...
Chars:
	name=EGYSTRING
;


terminal EGYSTRING returns ecore::EString:(
 // AlephU
 '\uA722'
 //&aleph;=
 |'\uA723'
 |'\u02BE'   // spiLen

//|'\u02BE'   // SpiLenU
|'\uA725'   // ajin
|'\uA724'   // AjinU
 
 |'j'|'y'|'w'|'b'|'f'|'m'|'n'|'r'
 |'h'|'ḥ'|'ḫ'|'ẖ'|'H'|'Ḥ'|'Ḫ'|'H̱'|'H̭'
 |'z'
 |'s'|'š'|'ś'|'S'|'Š'|'Ś'
 |'q'|'k'|'g'
 |'t'|'ṯ'|'ṭ'|'ṱ'|'T'|'Ṯ'|'Ṭ'|'Ṱ'
 |'d'|'ḏ'|'Ḏ'
 |'h̭'
 |'i'|'i̯'|'ı͗'|'ı̯͗'|'ï'|'i̭'|'I͗'|'I'
// |'\u0069\u032F'//iArcU
 |'\u0049\u032F' //IArcU
 |'i̯̯'
 |'\u00CF'   // ITremaU
 |'ḳ'|'Ḳ'
 |'u'|'u̯'|'U'|'\u0055\u032F'
 
 |'e'|'/'|'+'
 
 |'č'|'č̣'|'Č'|'Č̣'
 |'a'|'J'|'Y'|'W'|'B'|'P'|'F'|'M'
 |'N'|'R'|'L'
 
 |'Z'|'Q'|'K'|'G'|'D'
 |'A'
 

// coptic
	|'\u2C80'..'\u2CFF'
//	//oval
//	| '\uD80C\uDE86' |'\uD80C\uDE87'
//	
//	//cartouche
//	|'\uD80C\uDF79' |'\uD80C\uDF7A'
//	|'\u13379'   // cartOn
//	|'\u1337A'   // cartOff
//	//serech
//	|'\uD80C\uDE58' | '\uD80C\uDE82'
	|'p'|'l' 
	
	//interfix :
	|'='
//	|':'|'='|'\u2261'|','|'.'|'~'|'\u22ee'
	|'_'
	|'\u205D'   // trplColon	
	//num
	|'0'..'9'
	
	// special
	|'Õ'|'ã'|'Þ'|'!'
	|'\u0152'   // OElig
	|'\u0153'   // oelig
	|'\u0178'   // Yuml
	|'\u00C6'
)+;

// textual criticism brackets
Brackets:
	Rasur | AncientExpanded | RestorationOverRasur | ExpandedColumn |
	Expanded  | DisputableReading | Emendation | Lacuna | Deletion | 
	PartialDestruction
	|Cartouche |Oval |Serech
;

//Cartouche2:
//	'\u13379'   wChar+=NoCartouche+ '\u1337A'
//;

Oval: //Oval
	'\uD80C\uDE58' wChar+=NoCartouche+ '\uD80C\uDE82'
;

Serech:// eigentlich Serech
	'\uD80C\uDF79' wChar+=NoCartouche+ '\uD80C\uDF7A'
;
Cartouche:
	{Expanded}
	'\uD80C\uDE86'  wChar+=NoCartouche+ '\uD80C\uDE87'
;

NoCartouche:
	Chars 
	| Rasur | AncientExpanded | RestorationOverRasur | ExpandedColumn |
	Expanded  | DisputableReading | Emendation | Lacuna | Deletion | 
	PartialDestruction  
	| Interfix 
;

Expanded:
	{Expanded}
	'(' wChar+=NoExpanded+ ')'
;

NoExpanded:
	Chars | Interfix | DisputableReading
;

Emendation:
	{Emendation}
	'\u2329' wChar+=NoEmendation+ '\u232A'
	;

NoEmendation:
	Chars | Expanded  | Interfix | DisputableReading
;

DisputableReading:
	{DisputableReading}
	'\u2E2E' wChar+=NoDisputableReading+ '?'
;

NoDisputableReading:
	 Expanded | Emendation | Deletion | Chars | Interfix
;

Lacuna:
	{Lacuna}
	'[' wChar+=NoLacuna+ ']'
;

NoLacuna: 
	Expanded | Chars | Interfix | DisputableReading |Cartouche |Oval |Serech
;

Deletion:
	{Deletion}
	'{' wChar+=NoDeletion+ '}'
;

NoDeletion:
	Chars | PartialDestruction | Expanded | Interfix | DisputableReading
;

ExpandedColumn:
	{ExpandedColumn}
	'\u2329\u2329' wChar+=NoExpandedColumn+ '\u232A\u232A'
;

NoExpandedColumn:
	Chars | Expanded | Interfix | DisputableReading
;

Rasur:
	{Rasur}
	'{{' wChar+=NoRasur+ '}}'
;

NoRasur:
	Chars | Expanded | Interfix | DisputableReading
;

AncientExpanded:
	{AncientExpanded}
	'((' wChar+=NoAncientExpanded+ '))'
;

NoAncientExpanded:
	Chars | Expanded | Interfix | DisputableReading
;

RestorationOverRasur:
	{RestorationOverRasur}
	'[[' wChar+=NoRestorationOverRasur+ ']]'
;

NoRestorationOverRasur:
	Chars | Expanded | Interfix | DisputableReading |Cartouche
;

PartialDestruction:
	{PartialDestruction}
	'\u2E22' wChar+=NoPartialDestruction+ '\u2E23'
;

NoPartialDestruction:
	Chars | Deletion | Expanded | DisputableReading | Interfix |Cartouche |Oval |Serech 
;

// textual criticism interfixes
Interfix:
	InterfixFlexion | InterfixLexical |
	 InterfixSuffixPronomLexical |InterfixPrefixNonLexical |InterfixPrefixLexical
	 | InterfixConnectionSyllabicGroup
	 | InterfixCompoundWords
	 |InterfixPhoneticalComplement
;

InterfixLexical:
	{InterfixLexical}
	','
;

InterfixFlexion:
	{InterfixFlexion}
	'.'
;

InterfixSuffixPronomLexical:
	{InterfixSuffixPronomLexical}
	'\u2261'
;

InterfixPrefixNonLexical:
	{InterfixPrefixNonLexical}
	':'
;

InterfixPrefixLexical:
	{InterfixPrefixLexical}
	'\u22ee'
;

InterfixConnectionSyllabicGroup:
	{InterfixConnectionSyllabicGroup}
	'~'
;

InterfixCompoundWords:
	{InterfixCompoundWords}
	'-'
;

InterfixPhoneticalComplement:
	{InterfixPhoneticalComplement}
	';'
;