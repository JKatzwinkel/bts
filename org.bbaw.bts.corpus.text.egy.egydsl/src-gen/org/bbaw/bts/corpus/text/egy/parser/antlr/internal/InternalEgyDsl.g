/*
* generated by Xtext
*/
grammar InternalEgyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.bbaw.bts.corpus.text.egy.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.bbaw.bts.corpus.text.egy.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.bbaw.bts.corpus.text.egy.services.EgyDslGrammarAccess;

}

@parser::members {

 	private EgyDslGrammarAccess grammarAccess;
 	
    public InternalEgyDslParser(TokenStream input, EgyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "TextContent";	
   	}
   	
   	@Override
   	protected EgyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTextContent
entryRuleTextContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextContentRule()); }
	 iv_ruleTextContent=ruleTextContent 
	 { $current=$iv_ruleTextContent.current; } 
	 EOF 
;

// Rule TextContent
ruleTextContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTextContentAccess().getTextContentAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTextContentAccess().getItemsTextItemParserRuleCall_1_0_0()); 
	    }
		lv_items_1_0=ruleTextItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextContentRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_1_0, 
        		"TextItem");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_2=' ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTextContentAccess().getSpaceKeyword_1_1_0_0());
    }

    |	otherlv_3='\n' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTextContentAccess().getControl000aKeyword_1_1_0_1());
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTextContentAccess().getItemsTextItemParserRuleCall_1_1_1_0()); 
	    }
		lv_items_4_0=ruleTextItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextContentRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_4_0, 
        		"TextItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleTextItem
entryRuleTextItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextItemRule()); }
	 iv_ruleTextItem=ruleTextItem 
	 { $current=$iv_ruleTextItem.current; } 
	 EOF 
;

// Rule TextItem
ruleTextItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getTextItemAccess().getSentenceParserRuleCall()); 
    }
    this_Sentence_0=ruleSentence
    { 
        $current = $this_Sentence_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleSentence
entryRuleSentence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSentenceRule()); }
	 iv_ruleSentence=ruleSentence 
	 { $current=$iv_ruleSentence.current; } 
	 EOF 
;

// Rule Sentence
ruleSentence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='\u00A7' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSentenceAccess().getSectionSignKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getItemsSentenceItemParserRuleCall_1_0_0()); 
	    }
		lv_items_1_0=ruleSentenceItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_1_0, 
        		"SentenceItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=' ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSentenceAccess().getSpaceKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getItemsSentenceItemParserRuleCall_1_1_1_0()); 
	    }
		lv_items_3_0=ruleSentenceItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_3_0, 
        		"SentenceItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*)	otherlv_4='\u00A7' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSentenceAccess().getSectionSignKeyword_2());
    }
)
;





// Entry rule entryRuleSentenceItem
entryRuleSentenceItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSentenceItemRule()); }
	 iv_ruleSentenceItem=ruleSentenceItem 
	 { $current=$iv_ruleSentenceItem.current; } 
	 EOF 
;

// Rule SentenceItem
ruleSentenceItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getSentenceItemAccess().getWordParserRuleCall_0_0()); 
    }
    this_Word_0=ruleWord
    { 
        $current = $this_Word_0.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_1='\n' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSentenceItemAccess().getControl000aKeyword_0_1_0());
    }

    |	otherlv_2='\t' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSentenceItemAccess().getControl0009Keyword_0_1_1());
    }
)?)
    |(
    { 
        newCompositeNode(grammarAccess.getSentenceItemAccess().getAbstractMarkerParserRuleCall_1_0()); 
    }
    this_AbstractMarker_3=ruleAbstractMarker
    { 
        $current = $this_AbstractMarker_3.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_4='\n' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSentenceItemAccess().getControl000aKeyword_1_1_0());
    }

    |	otherlv_5='\t' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSentenceItemAccess().getControl0009Keyword_1_1_1());
    }
)?)
    |(
    { 
        newCompositeNode(grammarAccess.getSentenceItemAccess().getAmbivalenceParserRuleCall_2_0()); 
    }
    this_Ambivalence_6=ruleAmbivalence
    { 
        $current = $this_Ambivalence_6.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_7='\n' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSentenceItemAccess().getControl000aKeyword_2_1_0());
    }

    |	otherlv_8='\t' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSentenceItemAccess().getControl0009Keyword_2_1_1());
    }
)?))
;





// Entry rule entryRuleAbstractMarker
entryRuleAbstractMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractMarkerRule()); }
	 iv_ruleAbstractMarker=ruleAbstractMarker 
	 { $current=$iv_ruleAbstractMarker.current; } 
	 EOF 
;

// Rule AbstractMarker
ruleAbstractMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractMarkerAccess().getMarkerParserRuleCall_0()); 
    }
    this_Marker_0=ruleMarker
    { 
        $current = $this_Marker_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractMarkerAccess().getVersMarkerParserRuleCall_1()); 
    }
    this_VersMarker_1=ruleVersMarker
    { 
        $current = $this_VersMarker_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAmbivalence
entryRuleAmbivalence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAmbivalenceRule()); }
	 iv_ruleAmbivalence=ruleAmbivalence 
	 { $current=$iv_ruleAmbivalence.current; } 
	 EOF 
;

// Rule Ambivalence
ruleAmbivalence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAmbivalenceAccess().getPercentSignKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAmbivalenceAccess().getCasesCaseParserRuleCall_1_0_0()); 
	    }
		lv_cases_1_0=ruleCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAmbivalenceRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_1_0, 
        		"Case");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='; ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAmbivalenceAccess().getSemicolonSpaceKeyword_1_1_0());
    }
(	otherlv_3='\n' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAmbivalenceAccess().getControl000aKeyword_1_1_1_0());
    }

    |	otherlv_4='\t' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAmbivalenceAccess().getControl0009Keyword_1_1_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAmbivalenceAccess().getCasesCaseParserRuleCall_1_1_2_0()); 
	    }
		lv_cases_5_0=ruleCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAmbivalenceRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_5_0, 
        		"Case");
	        afterParserOrEnumRuleCall();
	    }

)
))+)	otherlv_6='%' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAmbivalenceAccess().getPercentSignKeyword_2());
    }
)
;





// Entry rule entryRuleCase
entryRuleCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaseRule()); }
	 iv_ruleCase=ruleCase 
	 { $current=$iv_ruleCase.current; } 
	 EOF 
;

// Rule Case
ruleCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='case ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCaseAccess().getCaseKeyword_0());
    }
(
(
		lv_name_1_0=RULE_EGYSTRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCaseAccess().getNameEGYSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EGYSTRING");
	    }

)
)	otherlv_2=': ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCaseAccess().getColonSpaceKeyword_2());
    }
(	otherlv_3='\n' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCaseAccess().getControl000aKeyword_3_0());
    }

    |	otherlv_4='\t' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCaseAccess().getControl0009Keyword_3_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getItemsSentenceItemNoAmbivalenceParserRuleCall_4_0_0()); 
	    }
		lv_items_5_0=ruleSentenceItemNoAmbivalence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_5_0, 
        		"SentenceItemNoAmbivalence");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=' ' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCaseAccess().getSpaceKeyword_4_1_0());
    }
(	otherlv_7='\n' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCaseAccess().getControl000aKeyword_4_1_1_0());
    }

    |	otherlv_8='\t' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCaseAccess().getControl0009Keyword_4_1_1_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getItemsSentenceItemNoAmbivalenceParserRuleCall_4_1_2_0()); 
	    }
		lv_items_9_0=ruleSentenceItemNoAmbivalence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		add(
       			$current, 
       			"items",
        		lv_items_9_0, 
        		"SentenceItemNoAmbivalence");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleSentenceItemNoAmbivalence
entryRuleSentenceItemNoAmbivalence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSentenceItemNoAmbivalenceRule()); }
	 iv_ruleSentenceItemNoAmbivalence=ruleSentenceItemNoAmbivalence 
	 { $current=$iv_ruleSentenceItemNoAmbivalence.current; } 
	 EOF 
;

// Rule SentenceItemNoAmbivalence
ruleSentenceItemNoAmbivalence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSentenceItemNoAmbivalenceAccess().getWordParserRuleCall_0()); 
    }
    this_Word_0=ruleWord
    { 
        $current = $this_Word_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSentenceItemNoAmbivalenceAccess().getAbstractMarkerParserRuleCall_1()); 
    }
    this_AbstractMarker_1=ruleAbstractMarker
    { 
        $current = $this_AbstractMarker_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVersMarker
entryRuleVersMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersMarkerRule()); }
	 iv_ruleVersMarker=ruleVersMarker 
	 { $current=$iv_ruleVersMarker.current; } 
	 EOF 
;

// Rule VersMarker
ruleVersMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVersMarkerAccess().getVersbreakMarkerParserRuleCall_0()); 
    }
    this_VersbreakMarker_0=ruleVersbreakMarker
    { 
        $current = $this_VersbreakMarker_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVersMarkerAccess().getVersFrontierMarkerParserRuleCall_1()); 
    }
    this_VersFrontierMarker_1=ruleVersFrontierMarker
    { 
        $current = $this_VersFrontierMarker_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVersFrontierMarker
entryRuleVersFrontierMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersFrontierMarkerRule()); }
	 iv_ruleVersFrontierMarker=ruleVersFrontierMarker 
	 { $current=$iv_ruleVersFrontierMarker.current; } 
	 EOF 
;

// Rule VersFrontierMarker
ruleVersFrontierMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVersFrontierMarkerAccess().getVersFrontierMarkerAction_0(),
            $current);
    }
)	otherlv_1='@mv' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVersFrontierMarkerAccess().getMvKeyword_1());
    }
)
;





// Entry rule entryRuleVersbreakMarker
entryRuleVersbreakMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersbreakMarkerRule()); }
	 iv_ruleVersbreakMarker=ruleVersbreakMarker 
	 { $current=$iv_ruleVersbreakMarker.current; } 
	 EOF 
;

// Rule VersbreakMarker
ruleVersbreakMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVersbreakMarkerAccess().getVersbreakMarkerAction_0(),
            $current);
    }
)	otherlv_1='@v' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVersbreakMarkerAccess().getVKeyword_1());
    }
)
;





// Entry rule entryRuleMarker
entryRuleMarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMarkerRule()); }
	 iv_ruleMarker=ruleMarker 
	 { $current=$iv_ruleMarker.current; } 
	 EOF 
;

// Rule Marker
ruleMarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMarkerAccess().getNumberSignKeyword_0());
    }
((
(
		lv_type_1_0=RULE_EGYSTRING
		{
			newLeafNode(lv_type_1_0, grammarAccess.getMarkerAccess().getTypeEGYSTRINGTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMarkerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"EGYSTRING");
	    }

)
)(	otherlv_2=': ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMarkerAccess().getColonSpaceKeyword_1_1_0());
    }
(	otherlv_3='\n' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMarkerAccess().getControl000aKeyword_1_1_1_0());
    }

    |	otherlv_4='\t' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMarkerAccess().getControl0009Keyword_1_1_1_1());
    }
)?(
(
		lv_name_5_0=RULE_EGYSTRING
		{
			newLeafNode(lv_name_5_0, grammarAccess.getMarkerAccess().getNameEGYSTRINGTerminalRuleCall_1_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMarkerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"EGYSTRING");
	    }

)
))?)	otherlv_6='#' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMarkerAccess().getNumberSignKeyword_2());
    }
)
;





// Entry rule entryRuleWord
entryRuleWord returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWordRule()); }
	 iv_ruleWord=ruleWord 
	 { $current=$iv_ruleWord.current; } 
	 EOF 
;

// Rule Word
ruleWord returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getWordAccess().getWordAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWordAccess().getWCharWordMiddleParserRuleCall_1_0()); 
	    }
		lv_wChar_1_0=ruleWordMiddle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWordRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_1_0, 
        		"WordMiddle");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleWordMiddle
entryRuleWordMiddle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWordMiddleRule()); }
	 iv_ruleWordMiddle=ruleWordMiddle 
	 { $current=$iv_ruleWordMiddle.current; } 
	 EOF 
;

// Rule WordMiddle
ruleWordMiddle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getWordMiddleAccess().getInterfixParserRuleCall_0()); 
    }
    this_Interfix_0=ruleInterfix
    { 
        $current = $this_Interfix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWordMiddleAccess().getBracketsParserRuleCall_1()); 
    }
    this_Brackets_1=ruleBrackets
    { 
        $current = $this_Brackets_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWordMiddleAccess().getCharsParserRuleCall_2()); 
    }
    this_Chars_2=ruleChars
    { 
        $current = $this_Chars_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleChars
entryRuleChars returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharsRule()); }
	 iv_ruleChars=ruleChars 
	 { $current=$iv_ruleChars.current; } 
	 EOF 
;

// Rule Chars
ruleChars returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_EGYSTRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getCharsAccess().getNameEGYSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCharsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"EGYSTRING");
	    }

)
)
;





// Entry rule entryRuleInterfix
entryRuleInterfix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfixRule()); }
	 iv_ruleInterfix=ruleInterfix 
	 { $current=$iv_ruleInterfix.current; } 
	 EOF 
;

// Rule Interfix
ruleInterfix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInterfixAccess().getInterfixFlexionParserRuleCall_0()); 
    }
    this_InterfixFlexion_0=ruleInterfixFlexion
    { 
        $current = $this_InterfixFlexion_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInterfixAccess().getInterfixLexicalParserRuleCall_1()); 
    }
    this_InterfixLexical_1=ruleInterfixLexical
    { 
        $current = $this_InterfixLexical_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInterfixAccess().getInterfixSuffixPronomLexicalParserRuleCall_2()); 
    }
    this_InterfixSuffixPronomLexical_2=ruleInterfixSuffixPronomLexical
    { 
        $current = $this_InterfixSuffixPronomLexical_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInterfixAccess().getInterfixPrefixNonLexicalParserRuleCall_3()); 
    }
    this_InterfixPrefixNonLexical_3=ruleInterfixPrefixNonLexical
    { 
        $current = $this_InterfixPrefixNonLexical_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInterfixAccess().getInterfixPrefixLexicalParserRuleCall_4()); 
    }
    this_InterfixPrefixLexical_4=ruleInterfixPrefixLexical
    { 
        $current = $this_InterfixPrefixLexical_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInterfixAccess().getInterfixCompountWordsParserRuleCall_5()); 
    }
    this_InterfixCompountWords_5=ruleInterfixCompountWords
    { 
        $current = $this_InterfixCompountWords_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInterfixAccess().getInterfixConnectionSyllabicGroupParserRuleCall_6()); 
    }
    this_InterfixConnectionSyllabicGroup_6=ruleInterfixConnectionSyllabicGroup
    { 
        $current = $this_InterfixConnectionSyllabicGroup_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInterfixLexical
entryRuleInterfixLexical returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfixLexicalRule()); }
	 iv_ruleInterfixLexical=ruleInterfixLexical 
	 { $current=$iv_ruleInterfixLexical.current; } 
	 EOF 
;

// Rule InterfixLexical
ruleInterfixLexical returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfixLexicalAccess().getInterfixLexicalAction_0(),
            $current);
    }
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfixLexicalAccess().getCommaKeyword_1());
    }
)
;





// Entry rule entryRuleInterfixFlexion
entryRuleInterfixFlexion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfixFlexionRule()); }
	 iv_ruleInterfixFlexion=ruleInterfixFlexion 
	 { $current=$iv_ruleInterfixFlexion.current; } 
	 EOF 
;

// Rule InterfixFlexion
ruleInterfixFlexion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfixFlexionAccess().getInterfixFlexionAction_0(),
            $current);
    }
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfixFlexionAccess().getFullStopKeyword_1());
    }
)
;





// Entry rule entryRuleInterfixSuffixPronomLexical
entryRuleInterfixSuffixPronomLexical returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfixSuffixPronomLexicalRule()); }
	 iv_ruleInterfixSuffixPronomLexical=ruleInterfixSuffixPronomLexical 
	 { $current=$iv_ruleInterfixSuffixPronomLexical.current; } 
	 EOF 
;

// Rule InterfixSuffixPronomLexical
ruleInterfixSuffixPronomLexical returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfixSuffixPronomLexicalAccess().getInterfixSuffixPronomLexicalAction_0(),
            $current);
    }
)	otherlv_1='\u2261' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfixSuffixPronomLexicalAccess().getIdenticalToKeyword_1());
    }
)
;





// Entry rule entryRuleInterfixPrefixNonLexical
entryRuleInterfixPrefixNonLexical returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfixPrefixNonLexicalRule()); }
	 iv_ruleInterfixPrefixNonLexical=ruleInterfixPrefixNonLexical 
	 { $current=$iv_ruleInterfixPrefixNonLexical.current; } 
	 EOF 
;

// Rule InterfixPrefixNonLexical
ruleInterfixPrefixNonLexical returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfixPrefixNonLexicalAccess().getInterfixPrefixNonLexicalAction_0(),
            $current);
    }
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfixPrefixNonLexicalAccess().getColonKeyword_1());
    }
)
;





// Entry rule entryRuleInterfixPrefixLexical
entryRuleInterfixPrefixLexical returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfixPrefixLexicalRule()); }
	 iv_ruleInterfixPrefixLexical=ruleInterfixPrefixLexical 
	 { $current=$iv_ruleInterfixPrefixLexical.current; } 
	 EOF 
;

// Rule InterfixPrefixLexical
ruleInterfixPrefixLexical returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfixPrefixLexicalAccess().getInterfixPrefixLexicalAction_0(),
            $current);
    }
)	otherlv_1='\u22EE' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfixPrefixLexicalAccess().getVerticalEllipsisKeyword_1());
    }
)
;





// Entry rule entryRuleInterfixCompountWords
entryRuleInterfixCompountWords returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfixCompountWordsRule()); }
	 iv_ruleInterfixCompountWords=ruleInterfixCompountWords 
	 { $current=$iv_ruleInterfixCompountWords.current; } 
	 EOF 
;

// Rule InterfixCompountWords
ruleInterfixCompountWords returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfixCompountWordsAccess().getInterfixCompountWordsAction_0(),
            $current);
    }
)	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfixCompountWordsAccess().getHyphenMinusKeyword_1());
    }
)
;





// Entry rule entryRuleInterfixConnectionSyllabicGroup
entryRuleInterfixConnectionSyllabicGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfixConnectionSyllabicGroupRule()); }
	 iv_ruleInterfixConnectionSyllabicGroup=ruleInterfixConnectionSyllabicGroup 
	 { $current=$iv_ruleInterfixConnectionSyllabicGroup.current; } 
	 EOF 
;

// Rule InterfixConnectionSyllabicGroup
ruleInterfixConnectionSyllabicGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfixConnectionSyllabicGroupAccess().getInterfixConnectionSyllabicGroupAction_0(),
            $current);
    }
)	otherlv_1='~' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfixConnectionSyllabicGroupAccess().getTildeKeyword_1());
    }
)
;





// Entry rule entryRuleBrackets
entryRuleBrackets returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBracketsRule()); }
	 iv_ruleBrackets=ruleBrackets 
	 { $current=$iv_ruleBrackets.current; } 
	 EOF 
;

// Rule Brackets
ruleBrackets returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getRasurParserRuleCall_0()); 
    }
    this_Rasur_0=ruleRasur
    { 
        $current = $this_Rasur_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getAncientExpandedParserRuleCall_1()); 
    }
    this_AncientExpanded_1=ruleAncientExpanded
    { 
        $current = $this_AncientExpanded_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getRestorationOverRasurParserRuleCall_2()); 
    }
    this_RestorationOverRasur_2=ruleRestorationOverRasur
    { 
        $current = $this_RestorationOverRasur_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getExpandedParserRuleCall_3()); 
    }
    this_Expanded_3=ruleExpanded
    { 
        $current = $this_Expanded_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getDisputableReadingParserRuleCall_4()); 
    }
    this_DisputableReading_4=ruleDisputableReading
    { 
        $current = $this_DisputableReading_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getEmendationParserRuleCall_5()); 
    }
    this_Emendation_5=ruleEmendation
    { 
        $current = $this_Emendation_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getLacunaParserRuleCall_6()); 
    }
    this_Lacuna_6=ruleLacuna
    { 
        $current = $this_Lacuna_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getDeletionParserRuleCall_7()); 
    }
    this_Deletion_7=ruleDeletion
    { 
        $current = $this_Deletion_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getExpandedColumnParserRuleCall_8()); 
    }
    this_ExpandedColumn_8=ruleExpandedColumn
    { 
        $current = $this_ExpandedColumn_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getPartialDestructionParserRuleCall_9()); 
    }
    this_PartialDestruction_9=rulePartialDestruction
    { 
        $current = $this_PartialDestruction_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBracketsAccess().getDestructionParserRuleCall_10()); 
    }
    this_Destruction_10=ruleDestruction
    { 
        $current = $this_Destruction_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpanded
entryRuleExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpandedRule()); }
	 iv_ruleExpanded=ruleExpanded 
	 { $current=$iv_ruleExpanded.current; } 
	 EOF 
;

// Rule Expanded
ruleExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpandedAccess().getExpandedAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpandedAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpandedAccess().getWCharNoExpandedParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoExpanded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpandedRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoExpanded");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpandedAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleNoExpanded
entryRuleNoExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoExpandedRule()); }
	 iv_ruleNoExpanded=ruleNoExpanded 
	 { $current=$iv_ruleNoExpanded.current; } 
	 EOF 
;

// Rule NoExpanded
ruleNoExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoExpandedAccess().getInterfixParserRuleCall_0()); 
    }
    this_Interfix_0=ruleInterfix
    { 
        $current = $this_Interfix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoExpandedAccess().getCharsParserRuleCall_1()); 
    }
    this_Chars_1=ruleChars
    { 
        $current = $this_Chars_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEmendation
entryRuleEmendation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmendationRule()); }
	 iv_ruleEmendation=ruleEmendation 
	 { $current=$iv_ruleEmendation.current; } 
	 EOF 
;

// Rule Emendation
ruleEmendation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEmendationAccess().getEmendationAction_0(),
            $current);
    }
)	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEmendationAccess().getLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmendationAccess().getWCharNoEmendationParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoEmendation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmendationRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoEmendation");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEmendationAccess().getGreaterThanSignKeyword_3());
    }
)
;





// Entry rule entryRuleNoEmendation
entryRuleNoEmendation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoEmendationRule()); }
	 iv_ruleNoEmendation=ruleNoEmendation 
	 { $current=$iv_ruleNoEmendation.current; } 
	 EOF 
;

// Rule NoEmendation
ruleNoEmendation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoEmendationAccess().getInterfixParserRuleCall_0()); 
    }
    this_Interfix_0=ruleInterfix
    { 
        $current = $this_Interfix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoEmendationAccess().getExpandedParserRuleCall_1()); 
    }
    this_Expanded_1=ruleExpanded
    { 
        $current = $this_Expanded_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoEmendationAccess().getCharsParserRuleCall_2()); 
    }
    this_Chars_2=ruleChars
    { 
        $current = $this_Chars_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDisputableReading
entryRuleDisputableReading returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDisputableReadingRule()); }
	 iv_ruleDisputableReading=ruleDisputableReading 
	 { $current=$iv_ruleDisputableReading.current; } 
	 EOF 
;

// Rule DisputableReading
ruleDisputableReading returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDisputableReadingAccess().getDisputableReadingAction_0(),
            $current);
    }
)	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDisputableReadingAccess().getQuestionMarkKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDisputableReadingAccess().getWCharNoDisputableReadingParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoDisputableReading		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDisputableReadingRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoDisputableReading");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='?' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDisputableReadingAccess().getQuestionMarkKeyword_3());
    }
)
;





// Entry rule entryRuleNoDisputableReading
entryRuleNoDisputableReading returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoDisputableReadingRule()); }
	 iv_ruleNoDisputableReading=ruleNoDisputableReading 
	 { $current=$iv_ruleNoDisputableReading.current; } 
	 EOF 
;

// Rule NoDisputableReading
ruleNoDisputableReading returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoDisputableReadingAccess().getInterfixParserRuleCall_0()); 
    }
    this_Interfix_0=ruleInterfix
    { 
        $current = $this_Interfix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoDisputableReadingAccess().getExpandedParserRuleCall_1()); 
    }
    this_Expanded_1=ruleExpanded
    { 
        $current = $this_Expanded_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoDisputableReadingAccess().getCharsParserRuleCall_2()); 
    }
    this_Chars_2=ruleChars
    { 
        $current = $this_Chars_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLacuna
entryRuleLacuna returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLacunaRule()); }
	 iv_ruleLacuna=ruleLacuna 
	 { $current=$iv_ruleLacuna.current; } 
	 EOF 
;

// Rule Lacuna
ruleLacuna returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLacunaAccess().getLacunaAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLacunaAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLacunaAccess().getWCharNoLacunaParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoLacuna		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLacunaRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoLacuna");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLacunaAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleNoLacuna
entryRuleNoLacuna returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoLacunaRule()); }
	 iv_ruleNoLacuna=ruleNoLacuna 
	 { $current=$iv_ruleNoLacuna.current; } 
	 EOF 
;

// Rule NoLacuna
ruleNoLacuna returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoLacunaAccess().getInterfixParserRuleCall_0()); 
    }
    this_Interfix_0=ruleInterfix
    { 
        $current = $this_Interfix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoLacunaAccess().getExpandedParserRuleCall_1()); 
    }
    this_Expanded_1=ruleExpanded
    { 
        $current = $this_Expanded_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoLacunaAccess().getCharsParserRuleCall_2()); 
    }
    this_Chars_2=ruleChars
    { 
        $current = $this_Chars_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDeletion
entryRuleDeletion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeletionRule()); }
	 iv_ruleDeletion=ruleDeletion 
	 { $current=$iv_ruleDeletion.current; } 
	 EOF 
;

// Rule Deletion
ruleDeletion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDeletionAccess().getDeletionAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDeletionAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDeletionAccess().getWCharNoDeletionParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoDeletion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDeletionRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoDeletion");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDeletionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleNoDeletion
entryRuleNoDeletion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoDeletionRule()); }
	 iv_ruleNoDeletion=ruleNoDeletion 
	 { $current=$iv_ruleNoDeletion.current; } 
	 EOF 
;

// Rule NoDeletion
ruleNoDeletion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoDeletionAccess().getInterfixParserRuleCall_0()); 
    }
    this_Interfix_0=ruleInterfix
    { 
        $current = $this_Interfix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoDeletionAccess().getCharsParserRuleCall_1()); 
    }
    this_Chars_1=ruleChars
    { 
        $current = $this_Chars_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoDeletionAccess().getPartialDestructionParserRuleCall_2()); 
    }
    this_PartialDestruction_2=rulePartialDestruction
    { 
        $current = $this_PartialDestruction_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoDeletionAccess().getExpandedParserRuleCall_3()); 
    }
    this_Expanded_3=ruleExpanded
    { 
        $current = $this_Expanded_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExpandedColumn
entryRuleExpandedColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpandedColumnRule()); }
	 iv_ruleExpandedColumn=ruleExpandedColumn 
	 { $current=$iv_ruleExpandedColumn.current; } 
	 EOF 
;

// Rule ExpandedColumn
ruleExpandedColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExpandedColumnAccess().getExpandedColumnAction_0(),
            $current);
    }
)	otherlv_1='<<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpandedColumnAccess().getLessThanSignLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpandedColumnAccess().getWCharNoExpandedColumnParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoExpandedColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpandedColumnRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoExpandedColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='>>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpandedColumnAccess().getGreaterThanSignGreaterThanSignKeyword_3());
    }
)
;





// Entry rule entryRuleNoExpandedColumn
entryRuleNoExpandedColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoExpandedColumnRule()); }
	 iv_ruleNoExpandedColumn=ruleNoExpandedColumn 
	 { $current=$iv_ruleNoExpandedColumn.current; } 
	 EOF 
;

// Rule NoExpandedColumn
ruleNoExpandedColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoExpandedColumnAccess().getInterfixParserRuleCall_0()); 
    }
    this_Interfix_0=ruleInterfix
    { 
        $current = $this_Interfix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoExpandedColumnAccess().getCharsParserRuleCall_1()); 
    }
    this_Chars_1=ruleChars
    { 
        $current = $this_Chars_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoExpandedColumnAccess().getExpandedParserRuleCall_2()); 
    }
    this_Expanded_2=ruleExpanded
    { 
        $current = $this_Expanded_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRasur
entryRuleRasur returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRasurRule()); }
	 iv_ruleRasur=ruleRasur 
	 { $current=$iv_ruleRasur.current; } 
	 EOF 
;

// Rule Rasur
ruleRasur returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRasurAccess().getRasurAction_0(),
            $current);
    }
)	otherlv_1='{{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRasurAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRasurAccess().getWCharNoRasurParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoRasur		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRasurRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoRasur");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRasurAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleNoRasur
entryRuleNoRasur returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoRasurRule()); }
	 iv_ruleNoRasur=ruleNoRasur 
	 { $current=$iv_ruleNoRasur.current; } 
	 EOF 
;

// Rule NoRasur
ruleNoRasur returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoRasurAccess().getInterfixParserRuleCall_0()); 
    }
    this_Interfix_0=ruleInterfix
    { 
        $current = $this_Interfix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoRasurAccess().getCharsParserRuleCall_1()); 
    }
    this_Chars_1=ruleChars
    { 
        $current = $this_Chars_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoRasurAccess().getExpandedParserRuleCall_2()); 
    }
    this_Expanded_2=ruleExpanded
    { 
        $current = $this_Expanded_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAncientExpanded
entryRuleAncientExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAncientExpandedRule()); }
	 iv_ruleAncientExpanded=ruleAncientExpanded 
	 { $current=$iv_ruleAncientExpanded.current; } 
	 EOF 
;

// Rule AncientExpanded
ruleAncientExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAncientExpandedAccess().getAncientExpandedAction_0(),
            $current);
    }
)	otherlv_1='((' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAncientExpandedAccess().getLeftParenthesisLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAncientExpandedAccess().getWCharNoAncientExpandedParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoAncientExpanded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAncientExpandedRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoAncientExpanded");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='))' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAncientExpandedAccess().getRightParenthesisRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleNoAncientExpanded
entryRuleNoAncientExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoAncientExpandedRule()); }
	 iv_ruleNoAncientExpanded=ruleNoAncientExpanded 
	 { $current=$iv_ruleNoAncientExpanded.current; } 
	 EOF 
;

// Rule NoAncientExpanded
ruleNoAncientExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoAncientExpandedAccess().getCharsParserRuleCall_0()); 
    }
    this_Chars_0=ruleChars
    { 
        $current = $this_Chars_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoAncientExpandedAccess().getExpandedParserRuleCall_1()); 
    }
    this_Expanded_1=ruleExpanded
    { 
        $current = $this_Expanded_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRestorationOverRasur
entryRuleRestorationOverRasur returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRestorationOverRasurRule()); }
	 iv_ruleRestorationOverRasur=ruleRestorationOverRasur 
	 { $current=$iv_ruleRestorationOverRasur.current; } 
	 EOF 
;

// Rule RestorationOverRasur
ruleRestorationOverRasur returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRestorationOverRasurAccess().getRestorationOverRasurAction_0(),
            $current);
    }
)	otherlv_1='[[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRestorationOverRasurAccess().getLeftSquareBracketLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRestorationOverRasurAccess().getWCharNoRestorationOverRasurParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoRestorationOverRasur		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRestorationOverRasurRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoRestorationOverRasur");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3=']]' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRestorationOverRasurAccess().getRightSquareBracketRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleNoRestorationOverRasur
entryRuleNoRestorationOverRasur returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoRestorationOverRasurRule()); }
	 iv_ruleNoRestorationOverRasur=ruleNoRestorationOverRasur 
	 { $current=$iv_ruleNoRestorationOverRasur.current; } 
	 EOF 
;

// Rule NoRestorationOverRasur
ruleNoRestorationOverRasur returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoRestorationOverRasurAccess().getCharsParserRuleCall_0()); 
    }
    this_Chars_0=ruleChars
    { 
        $current = $this_Chars_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoRestorationOverRasurAccess().getExpandedParserRuleCall_1()); 
    }
    this_Expanded_1=ruleExpanded
    { 
        $current = $this_Expanded_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePartialDestruction
entryRulePartialDestruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartialDestructionRule()); }
	 iv_rulePartialDestruction=rulePartialDestruction 
	 { $current=$iv_rulePartialDestruction.current; } 
	 EOF 
;

// Rule PartialDestruction
rulePartialDestruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPartialDestructionAccess().getPartialDestructionAction_0(),
            $current);
    }
)	otherlv_1='\u2E22' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPartialDestructionAccess().getTopLeftHalfBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPartialDestructionAccess().getWCharNoPartialDestructionParserRuleCall_2_0()); 
	    }
		lv_wChar_2_0=ruleNoPartialDestruction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartialDestructionRule());
	        }
       		add(
       			$current, 
       			"wChar",
        		lv_wChar_2_0, 
        		"NoPartialDestruction");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='\u2E23' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartialDestructionAccess().getTopRightHalfBracketKeyword_3());
    }
)
;





// Entry rule entryRuleNoPartialDestruction
entryRuleNoPartialDestruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoPartialDestructionRule()); }
	 iv_ruleNoPartialDestruction=ruleNoPartialDestruction 
	 { $current=$iv_ruleNoPartialDestruction.current; } 
	 EOF 
;

// Rule NoPartialDestruction
ruleNoPartialDestruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNoPartialDestructionAccess().getCharsParserRuleCall_0()); 
    }
    this_Chars_0=ruleChars
    { 
        $current = $this_Chars_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoPartialDestructionAccess().getDeletionParserRuleCall_1()); 
    }
    this_Deletion_1=ruleDeletion
    { 
        $current = $this_Deletion_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoPartialDestructionAccess().getInterfixParserRuleCall_2()); 
    }
    this_Interfix_2=ruleInterfix
    { 
        $current = $this_Interfix_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNoPartialDestructionAccess().getExpandedParserRuleCall_3()); 
    }
    this_Expanded_3=ruleExpanded
    { 
        $current = $this_Expanded_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDestruction
entryRuleDestruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDestructionRule()); }
	 iv_ruleDestruction=ruleDestruction 
	 { $current=$iv_ruleDestruction.current; } 
	 EOF 
;

// Rule Destruction
ruleDestruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDestructionAccess().getDestructionAction_0(),
            $current);
    }
)	otherlv_1='--' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDestructionAccess().getHyphenMinusHyphenMinusKeyword_1());
    }
(
(
		lv_comment_2_0=RULE_EGYSTRING
		{
			newLeafNode(lv_comment_2_0, grammarAccess.getDestructionAccess().getCommentEGYSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDestructionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"comment",
        		lv_comment_2_0, 
        		"EGYSTRING");
	    }

)
)	otherlv_3='--' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDestructionAccess().getHyphenMinusHyphenMinusKeyword_3());
    }
)
;





RULE_EGYSTRING : ~((' '|'\n'|'\t'|'\u00A7'|'#'|'%'|';'|'.'|','|':'|'-'|'~'|'\u2261'|'\u22EE'|'('|')'|'<'|'>'|'?'|'{'|'}'|'\u2E22'|'\u2E23'|'@'))*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


