/**
 */
package org.bbaw.bts.btsmodel.provider;

import java.util.ArrayList;
import java.util.Collection;

import java.util.List;
import org.bbaw.bts.btsmodel.BtsmodelPackage;
import org.bbaw.bts.btsmodel.util.BtsmodelAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemColorProvider;
import org.eclipse.emf.edit.provider.IItemFontProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITableItemColorProvider;
import org.eclipse.emf.edit.provider.ITableItemFontProvider;
import org.eclipse.emf.edit.provider.ITableItemLabelProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class BtsmodelItemProviderAdapterFactory extends BtsmodelAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(BTSModelEditPlugin.INSTANCE, BtsmodelPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public BtsmodelItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
		supportedTypes.add(ITableItemLabelProvider.class);
		supportedTypes.add(ITableItemColorProvider.class);
		supportedTypes.add(ITableItemFontProvider.class);
		supportedTypes.add(IItemColorProvider.class);
		supportedTypes.add(IItemFontProvider.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSTCObject} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSTCObjectItemProvider btstcObjectItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSTCObject}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSTCObjectAdapter() {
		if (btstcObjectItemProvider == null)
		{
			btstcObjectItemProvider = new BTSTCObjectItemProvider(this);
		}

		return btstcObjectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSText} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSTextItemProvider btsTextItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSText}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSTextAdapter() {
		if (btsTextItemProvider == null)
		{
			btsTextItemProvider = new BTSTextItemProvider(this);
		}

		return btsTextItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSSenctence} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSSenctenceItemProvider btsSenctenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSSenctence}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSSenctenceAdapter() {
		if (btsSenctenceItemProvider == null)
		{
			btsSenctenceItemProvider = new BTSSenctenceItemProvider(this);
		}

		return btsSenctenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSWord} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSWordItemProvider btsWordItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSWord}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSWordAdapter() {
		if (btsWordItemProvider == null)
		{
			btsWordItemProvider = new BTSWordItemProvider(this);
		}

		return btsWordItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSDelimiter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSDelimiterItemProvider btsDelimiterItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSDelimiter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSDelimiterAdapter() {
		if (btsDelimiterItemProvider == null)
		{
			btsDelimiterItemProvider = new BTSDelimiterItemProvider(this);
		}

		return btsDelimiterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSListEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSListEntryItemProvider btsListEntryItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSListEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSListEntryAdapter() {
		if (btsListEntryItemProvider == null)
		{
			btsListEntryItemProvider = new BTSListEntryItemProvider(this);
		}

		return btsListEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSPassport} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSPassportItemProvider btsPassportItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSPassport}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSPassportAdapter() {
		if (btsPassportItemProvider == null)
		{
			btsPassportItemProvider = new BTSPassportItemProvider(this);
		}

		return btsPassportItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSAmbivalence} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSAmbivalenceItemProvider btsAmbivalenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSAmbivalence}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSAmbivalenceAdapter() {
		if (btsAmbivalenceItemProvider == null)
		{
			btsAmbivalenceItemProvider = new BTSAmbivalenceItemProvider(this);
		}

		return btsAmbivalenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSLemmaCase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSLemmaCaseItemProvider btsLemmaCaseItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSLemmaCase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSLemmaCaseAdapter() {
		if (btsLemmaCaseItemProvider == null)
		{
			btsLemmaCaseItemProvider = new BTSLemmaCaseItemProvider(this);
		}

		return btsLemmaCaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSUser} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSUserItemProvider btsUserItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSUser}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSUserAdapter() {
		if (btsUserItemProvider == null)
		{
			btsUserItemProvider = new BTSUserItemProvider(this);
		}

		return btsUserItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSComment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSCommentItemProvider btsCommentItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSComment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSCommentAdapter() {
		if (btsCommentItemProvider == null)
		{
			btsCommentItemProvider = new BTSCommentItemProvider(this);
		}

		return btsCommentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSInterTextReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSInterTextReferenceItemProvider btsInterTextReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSInterTextReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSInterTextReferenceAdapter() {
		if (btsInterTextReferenceItemProvider == null)
		{
			btsInterTextReferenceItemProvider = new BTSInterTextReferenceItemProvider(this);
		}

		return btsInterTextReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSAnnotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSAnnotationItemProvider btsAnnotationItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSAnnotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSAnnotationAdapter() {
		if (btsAnnotationItemProvider == null)
		{
			btsAnnotationItemProvider = new BTSAnnotationItemProvider(this);
		}

		return btsAnnotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSTranslation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSTranslationItemProvider btsTranslationItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSTranslation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSTranslationAdapter() {
		if (btsTranslationItemProvider == null)
		{
			btsTranslationItemProvider = new BTSTranslationItemProvider(this);
		}

		return btsTranslationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSDate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSDateItemProvider btsDateItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSDate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSDateAdapter() {
		if (btsDateItemProvider == null)
		{
			btsDateItemProvider = new BTSDateItemProvider(this);
		}

		return btsDateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSPassportEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSPassportEntryItemProvider btsPassportEntryItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSPassportEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSPassportEntryAdapter() {
		if (btsPassportEntryItemProvider == null)
		{
			btsPassportEntryItemProvider = new BTSPassportEntryItemProvider(this);
		}

		return btsPassportEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSRelation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSRelationItemProvider btsRelationItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSRelation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSRelationAdapter() {
		if (btsRelationItemProvider == null)
		{
			btsRelationItemProvider = new BTSRelationItemProvider(this);
		}

		return btsRelationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSConfigurationItemProvider btsConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSConfigurationAdapter() {
		if (btsConfigurationItemProvider == null)
		{
			btsConfigurationItemProvider = new BTSConfigurationItemProvider(this);
		}

		return btsConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSTextCorpus} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSTextCorpusItemProvider btsTextCorpusItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSTextCorpus}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSTextCorpusAdapter() {
		if (btsTextCorpusItemProvider == null)
		{
			btsTextCorpusItemProvider = new BTSTextCorpusItemProvider(this);
		}

		return btsTextCorpusItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSRevision} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSRevisionItemProvider btsRevisionItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSRevision}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSRevisionAdapter() {
		if (btsRevisionItemProvider == null)
		{
			btsRevisionItemProvider = new BTSRevisionItemProvider(this);
		}

		return btsRevisionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSImage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSImageItemProvider btsImageItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSImage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSImageAdapter() {
		if (btsImageItemProvider == null)
		{
			btsImageItemProvider = new BTSImageItemProvider(this);
		}

		return btsImageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSCorpusHeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSCorpusHeaderItemProvider btsCorpusHeaderItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSCorpusHeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSCorpusHeaderAdapter() {
		if (btsCorpusHeaderItemProvider == null)
		{
			btsCorpusHeaderItemProvider = new BTSCorpusHeaderItemProvider(this);
		}

		return btsCorpusHeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSTimespan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSTimespanItemProvider btsTimespanItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSTimespan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSTimespanAdapter() {
		if (btsTimespanItemProvider == null)
		{
			btsTimespanItemProvider = new BTSTimespanItemProvider(this);
		}

		return btsTimespanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSExternalReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSExternalReferenceItemProvider btsExternalReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSExternalReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSExternalReferenceAdapter() {
		if (btsExternalReferenceItemProvider == null)
		{
			btsExternalReferenceItemProvider = new BTSExternalReferenceItemProvider(this);
		}

		return btsExternalReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSGraphic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSGraphicItemProvider btsGraphicItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSGraphic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSGraphicAdapter() {
		if (btsGraphicItemProvider == null)
		{
			btsGraphicItemProvider = new BTSGraphicItemProvider(this);
		}

		return btsGraphicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSTranslations} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSTranslationsItemProvider btsTranslationsItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSTranslations}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSTranslationsAdapter() {
		if (btsTranslationsItemProvider == null)
		{
			btsTranslationsItemProvider = new BTSTranslationsItemProvider(this);
		}

		return btsTranslationsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSConfigItem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSConfigItemItemProvider btsConfigItemItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSConfigItem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSConfigItemAdapter() {
		if (btsConfigItemItemProvider == null)
		{
			btsConfigItemItemProvider = new BTSConfigItemItemProvider(this);
		}

		return btsConfigItemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSPassportEditorConfig} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSPassportEditorConfigItemProvider btsPassportEditorConfigItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSPassportEditorConfig}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSPassportEditorConfigAdapter() {
		if (btsPassportEditorConfigItemProvider == null)
		{
			btsPassportEditorConfigItemProvider = new BTSPassportEditorConfigItemProvider(this);
		}

		return btsPassportEditorConfigItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSUserGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSUserGroupItemProvider btsUserGroupItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSUserGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSUserGroupAdapter() {
		if (btsUserGroupItemProvider == null)
		{
			btsUserGroupItemProvider = new BTSUserGroupItemProvider(this);
		}

		return btsUserGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSListItemProvider btsListItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSListAdapter() {
		if (btsListItemProvider == null)
		{
			btsListItemProvider = new BTSListItemProvider(this);
		}

		return btsListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSPpSubentry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSPpSubentryItemProvider btsPpSubentryItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSPpSubentry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSPpSubentryAdapter() {
		if (btsPpSubentryItemProvider == null)
		{
			btsPpSubentryItemProvider = new BTSPpSubentryItemProvider(this);
		}

		return btsPpSubentryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSListSubentry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSListSubentryItemProvider btsListSubentryItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSListSubentry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSListSubentryAdapter() {
		if (btsListSubentryItemProvider == null)
		{
			btsListSubentryItemProvider = new BTSListSubentryItemProvider(this);
		}

		return btsListSubentryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSThsEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSThsEntryItemProvider btsThsEntryItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSThsEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSThsEntryAdapter()
	{
		if (btsThsEntryItemProvider == null)
		{
			btsThsEntryItemProvider = new BTSThsEntryItemProvider(this);
		}

		return btsThsEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSProject} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSProjectItemProvider btsProjectItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSProject}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSProjectAdapter()
	{
		if (btsProjectItemProvider == null)
		{
			btsProjectItemProvider = new BTSProjectItemProvider(this);
		}

		return btsProjectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSDBConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSDBConnectionItemProvider btsdbConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSDBConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSDBConnectionAdapter()
	{
		if (btsdbConnectionItemProvider == null)
		{
			btsdbConnectionItemProvider = new BTSDBConnectionItemProvider(this);
		}

		return btsdbConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSWorkflowRule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSWorkflowRuleItemProvider btsWorkflowRuleItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSWorkflowRule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSWorkflowRuleAdapter()
	{
		if (btsWorkflowRuleItemProvider == null)
		{
			btsWorkflowRuleItemProvider = new BTSWorkflowRuleItemProvider(this);
		}

		return btsWorkflowRuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSOperatorItemProvider btsOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSOperatorAdapter()
	{
		if (btsOperatorItemProvider == null)
		{
			btsOperatorItemProvider = new BTSOperatorItemProvider(this);
		}

		return btsOperatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.DBLease} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DBLeaseItemProvider dbLeaseItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.DBLease}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDBLeaseAdapter()
	{
		if (dbLeaseItemProvider == null)
		{
			dbLeaseItemProvider = new DBLeaseItemProvider(this);
		}

		return dbLeaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bbaw.bts.btsmodel.BTSProjectDBCollection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BTSProjectDBCollectionItemProvider btsProjectDBCollectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.bbaw.bts.btsmodel.BTSProjectDBCollection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBTSProjectDBCollectionAdapter()
	{
		if (btsProjectDBCollectionItemProvider == null)
		{
			btsProjectDBCollectionItemProvider = new BTSProjectDBCollectionItemProvider(this);
		}

		return btsProjectDBCollectionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type))
		{
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter)))
			{
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders()
	{
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain)
	{
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ResourceLocator getResourceLocator()
	{
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null)
		{
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (btstcObjectItemProvider != null) btstcObjectItemProvider.dispose();
		if (btsTextItemProvider != null) btsTextItemProvider.dispose();
		if (btsSenctenceItemProvider != null) btsSenctenceItemProvider.dispose();
		if (btsWordItemProvider != null) btsWordItemProvider.dispose();
		if (btsDelimiterItemProvider != null) btsDelimiterItemProvider.dispose();
		if (btsListEntryItemProvider != null) btsListEntryItemProvider.dispose();
		if (btsPassportItemProvider != null) btsPassportItemProvider.dispose();
		if (btsAmbivalenceItemProvider != null) btsAmbivalenceItemProvider.dispose();
		if (btsLemmaCaseItemProvider != null) btsLemmaCaseItemProvider.dispose();
		if (btsUserItemProvider != null) btsUserItemProvider.dispose();
		if (btsCommentItemProvider != null) btsCommentItemProvider.dispose();
		if (btsInterTextReferenceItemProvider != null) btsInterTextReferenceItemProvider.dispose();
		if (btsAnnotationItemProvider != null) btsAnnotationItemProvider.dispose();
		if (btsTranslationItemProvider != null) btsTranslationItemProvider.dispose();
		if (btsDateItemProvider != null) btsDateItemProvider.dispose();
		if (btsPassportEntryItemProvider != null) btsPassportEntryItemProvider.dispose();
		if (btsRelationItemProvider != null) btsRelationItemProvider.dispose();
		if (btsConfigurationItemProvider != null) btsConfigurationItemProvider.dispose();
		if (btsTextCorpusItemProvider != null) btsTextCorpusItemProvider.dispose();
		if (btsRevisionItemProvider != null) btsRevisionItemProvider.dispose();
		if (btsImageItemProvider != null) btsImageItemProvider.dispose();
		if (btsCorpusHeaderItemProvider != null) btsCorpusHeaderItemProvider.dispose();
		if (btsTimespanItemProvider != null) btsTimespanItemProvider.dispose();
		if (btsExternalReferenceItemProvider != null) btsExternalReferenceItemProvider.dispose();
		if (btsGraphicItemProvider != null) btsGraphicItemProvider.dispose();
		if (btsTranslationsItemProvider != null) btsTranslationsItemProvider.dispose();
		if (btsConfigItemItemProvider != null) btsConfigItemItemProvider.dispose();
		if (btsPassportEditorConfigItemProvider != null) btsPassportEditorConfigItemProvider.dispose();
		if (btsUserGroupItemProvider != null) btsUserGroupItemProvider.dispose();
		if (btsListItemProvider != null) btsListItemProvider.dispose();
		if (btsPpSubentryItemProvider != null) btsPpSubentryItemProvider.dispose();
		if (btsListSubentryItemProvider != null) btsListSubentryItemProvider.dispose();
		if (btsThsEntryItemProvider != null) btsThsEntryItemProvider.dispose();
		if (btsProjectItemProvider != null) btsProjectItemProvider.dispose();
		if (btsdbConnectionItemProvider != null) btsdbConnectionItemProvider.dispose();
		if (btsWorkflowRuleItemProvider != null) btsWorkflowRuleItemProvider.dispose();
		if (btsOperatorItemProvider != null) btsOperatorItemProvider.dispose();
		if (dbLeaseItemProvider != null) dbLeaseItemProvider.dispose();
		if (btsProjectDBCollectionItemProvider != null) btsProjectDBCollectionItemProvider.dispose();
	}

}
